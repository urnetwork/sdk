// Objective-C API for talking to github.com/urnetwork/sdkbuilder/v2025 Go package.
//   gobind -lang=objc github.com/urnetwork/sdkbuilder/v2025
//
// File is generated by gobind. Do not edit.

#ifndef __Sdk_H__
#define __Sdk_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class SdkAccountPayment;
@class SdkAccountPaymentsList;
@class SdkAccountPreferencesGetResult;
@class SdkAccountPreferencesSetArgs;
@class SdkAccountPreferencesSetResult;
@class SdkAccountPreferencesViewController;
@class SdkAccountViewController;
@class SdkAccountWallet;
@class SdkAccountWalletsList;
@class SdkApi;
@class SdkAsyncLocalState;
@class SdkAuthCodeLoginArgs;
@class SdkAuthCodeLoginError;
@class SdkAuthCodeLoginResult;
@class SdkAuthLoginArgs;
@class SdkAuthLoginResult;
@class SdkAuthLoginResultError;
@class SdkAuthLoginResultNetwork;
@class SdkAuthLoginWithPasswordArgs;
@class SdkAuthLoginWithPasswordResult;
@class SdkAuthLoginWithPasswordResultError;
@class SdkAuthLoginWithPasswordResultNetwork;
@class SdkAuthLoginWithPasswordResultVerification;
@class SdkAuthNetworkClientArgs;
@class SdkAuthNetworkClientError;
@class SdkAuthNetworkClientResult;
@class SdkAuthPasswordResetArgs;
@class SdkAuthPasswordResetResult;
@class SdkAuthVerifyArgs;
@class SdkAuthVerifyResult;
@class SdkAuthVerifyResultError;
@class SdkAuthVerifyResultNetwork;
@class SdkAuthVerifySendArgs;
@class SdkAuthVerifySendResult;
@class SdkBlockAction;
@class SdkBlockActionList;
@class SdkBlockActionOverride;
@class SdkBlockActionOverrideList;
@class SdkBlockActionWindow;
@class SdkBlockStats;
@class SdkByJwt;
@class SdkCircleUserToken;
@class SdkCircleWalletInfo;
@class SdkConnectGrid;
@class SdkConnectLocation;
@class SdkConnectLocationId;
@class SdkConnectLocationList;
@class SdkConnectViewController;
@class SdkContractDetails;
@class SdkContractDetailsList;
@class SdkContractStats;
@class SdkContractStatus;
@class SdkCreateAccountWalletArgs;
@class SdkCreateAccountWalletResult;
@class SdkDeviceLocal;
@class SdkDeviceLocalRpc;
@class SdkDeviceRemote;
@class SdkDeviceRemoteAddress;
@class SdkDeviceRemoteConnectLocation;
@class SdkDeviceRemoteConnectLocationChangeEvent;
@class SdkDeviceRemoteConnectLocationId;
@class SdkDeviceRemoteConnectLocationValue;
@class SdkDeviceRemoteContractStatus;
@class SdkDeviceRemoteDestination;
@class SdkDeviceRemoteHttpRequest;
@class SdkDeviceRemoteHttpResponse;
@class SdkDeviceRemoteHttpResponseError;
@class SdkDeviceRemoteOfflineChangeEvent;
@class SdkDeviceRemoteRpc;
@class SdkDeviceRemoteState;
@class SdkDeviceRemoteSyncRequest;
@class SdkDeviceRemoteSyncResponse;
@class SdkDeviceRemoteWindowListenerId;
@class SdkDeviceRemoteWindowMonitorEvent;
@class SdkDeviceStats;
@class SdkDevicesViewController;
@class SdkExportNetworkSpace;
@class SdkFeedbackSendArgs;
@class SdkFeedbackSendNeeds;
@class SdkFeedbackSendResult;
@class SdkFeedbackViewController;
@class SdkFilteredLocations;
@class SdkFindLocationsArgs;
@class SdkFindLocationsResult;
@class SdkFindProviders2Args;
@class SdkFindProviders2Result;
@class SdkFindProvidersArgs;
@class SdkFindProvidersProvider;
@class SdkFindProvidersProviderList;
@class SdkFindProvidersResult;
@class SdkGetAccountWalletsResult;
@class SdkGetNetworkAccountPaymentsError;
@class SdkGetNetworkAccountPaymentsResult;
@class SdkGetNetworkReferralCodeError;
@class SdkGetNetworkReferralCodeResult;
@class SdkGetNetworkUserError;
@class SdkGetNetworkUserResult;
@class SdkGetPayoutWalletIdResult;
@class SdkId;
@class SdkIdList;
@class SdkIntList;
@class SdkLocalState;
@class SdkLocationDeviceResult;
@class SdkLocationDeviceResultList;
@class SdkLocationGroupResult;
@class SdkLocationGroupResultList;
@class SdkLocationResult;
@class SdkLocationResultList;
@class SdkLocationsViewController;
@class SdkLoginViewController;
@class SdkNetExtender;
@class SdkNetExtenderAutoConfigure;
@class SdkNetworkCheckArgs;
@class SdkNetworkCheckResult;
@class SdkNetworkClientConnection;
@class SdkNetworkClientConnectionList;
@class SdkNetworkClientInfo;
@class SdkNetworkClientInfoList;
@class SdkNetworkClientResident;
@class SdkNetworkClientsResult;
@class SdkNetworkCreateArgs;
@class SdkNetworkCreateResult;
@class SdkNetworkCreateResultError;
@class SdkNetworkCreateResultNetwork;
@class SdkNetworkCreateResultVerification;
@class SdkNetworkDeleteResult;
@class SdkNetworkNameValidationViewController;
@class SdkNetworkSpace;
@class SdkNetworkSpaceKey;
@class SdkNetworkSpaceList;
@class SdkNetworkSpaceManager;
@class SdkNetworkSpaceValues;
@class SdkNetworkUser;
@class SdkNetworkUserUpdateArgs;
@class SdkNetworkUserUpdateError;
@class SdkNetworkUserUpdateResult;
@class SdkNetworkUserViewController;
@class SdkProvideSecretKey;
@class SdkProvideSecretKeyList;
@class SdkProvideViewController;
@class SdkProviderGridPoint;
@class SdkProviderGridPointList;
@class SdkProviderSpec;
@class SdkProviderSpecList;
@class SdkReferralCodeViewController;
@class SdkRemoveWalletArgs;
@class SdkRemoveWalletError;
@class SdkRemoveWalletResult;
@class SdkSetPayoutWalletArgs;
@class SdkSetPayoutWalletResult;
@class SdkStringList;
@class SdkSubscription;
@class SdkSubscriptionBalanceResult;
@class SdkSubscriptionCreatePaymentIdArgs;
@class SdkSubscriptionCreatePaymentIdError;
@class SdkSubscriptionCreatePaymentIdResult;
@class SdkTime;
@class SdkTransferBalance;
@class SdkTransferBalanceList;
@class SdkTransferPath;
@class SdkTransferPathList;
@class SdkTransferStatsResult;
@class SdkTunnel;
@class SdkUpgradeGuestArgs;
@class SdkUpgradeGuestExistingArgs;
@class SdkUpgradeGuestExistingNetwork;
@class SdkUpgradeGuestExistingResult;
@class SdkUpgradeGuestExistingResultVerification;
@class SdkUpgradeGuestNetwork;
@class SdkUpgradeGuestResult;
@class SdkUpgradeGuestResultVerification;
@class SdkUpgradeGuesteExistingResultError;
@class SdkUpgradeGuesteResultError;
@class SdkValidateReferralCodeArgs;
@class SdkValidateReferralCodeResult;
@class SdkWalletBalanceResult;
@class SdkWalletCircleInitError;
@class SdkWalletCircleInitResult;
@class SdkWalletCircleTransferOutArgs;
@class SdkWalletCircleTransferOutError;
@class SdkWalletCircleTransferOutResult;
@class SdkWalletValidateAddressArgs;
@class SdkWalletValidateAddressResult;
@class SdkWalletViewController;
@protocol SdkAccountPreferencesGetCallback;
@class SdkAccountPreferencesGetCallback;
@protocol SdkAccountPreferencesSetCallback;
@class SdkAccountPreferencesSetCallback;
@protocol SdkAccountWalletsListener;
@class SdkAccountWalletsListener;
@protocol SdkActiveNetworkSpaceChangeListener;
@class SdkActiveNetworkSpaceChangeListener;
@protocol SdkAllowProductUpdatesListener;
@class SdkAllowProductUpdatesListener;
@protocol SdkAuthCodeLoginCallback;
@class SdkAuthCodeLoginCallback;
@protocol SdkAuthLoginCallback;
@class SdkAuthLoginCallback;
@protocol SdkAuthLoginWithPasswordCallback;
@class SdkAuthLoginWithPasswordCallback;
@protocol SdkAuthNetworkClientCallback;
@class SdkAuthNetworkClientCallback;
@protocol SdkAuthPasswordResetCallback;
@class SdkAuthPasswordResetCallback;
@protocol SdkAuthVerifyCallback;
@class SdkAuthVerifyCallback;
@protocol SdkAuthVerifySendCallback;
@class SdkAuthVerifySendCallback;
@protocol SdkBlockActionWindowChangeListener;
@class SdkBlockActionWindowChangeListener;
@protocol SdkBlockChangeListener;
@class SdkBlockChangeListener;
@protocol SdkBlockStatsChangeListener;
@class SdkBlockStatsChangeListener;
@protocol SdkCommitCallback;
@class SdkCommitCallback;
@protocol SdkConnectChangeListener;
@class SdkConnectChangeListener;
@protocol SdkConnectLocationChangeListener;
@class SdkConnectLocationChangeListener;
@protocol SdkConnectionStatusListener;
@class SdkConnectionStatusListener;
@protocol SdkContractDetailsChangeListener;
@class SdkContractDetailsChangeListener;
@protocol SdkContractStatsChangeListener;
@class SdkContractStatsChangeListener;
@protocol SdkContractStatusChangeListener;
@class SdkContractStatusChangeListener;
@protocol SdkCreateAccountWalletCallback;
@class SdkCreateAccountWalletCallback;
@protocol SdkDevice;
@class SdkDevice;
@protocol SdkFilteredLocationsListener;
@class SdkFilteredLocationsListener;
@protocol SdkFindLocationsCallback;
@class SdkFindLocationsCallback;
@protocol SdkFindProviders2Callback;
@class SdkFindProviders2Callback;
@protocol SdkFindProvidersCallback;
@class SdkFindProvidersCallback;
@protocol SdkGetAccountPaymentsCallback;
@class SdkGetAccountPaymentsCallback;
@protocol SdkGetAccountWalletsCallback;
@class SdkGetAccountWalletsCallback;
@protocol SdkGetByClientJwtCallback;
@class SdkGetByClientJwtCallback;
@protocol SdkGetByJwtCallback;
@class SdkGetByJwtCallback;
@protocol SdkGetInstanceIdCallback;
@class SdkGetInstanceIdCallback;
@protocol SdkGetNetworkClientsCallback;
@class SdkGetNetworkClientsCallback;
@protocol SdkGetNetworkReferralCodeCallback;
@class SdkGetNetworkReferralCodeCallback;
@protocol SdkGetNetworkUserCallback;
@class SdkGetNetworkUserCallback;
@protocol SdkGetPayoutWalletCallback;
@class SdkGetPayoutWalletCallback;
@protocol SdkGetTransferStatsCallback;
@class SdkGetTransferStatsCallback;
@protocol SdkGridListener;
@class SdkGridListener;
@protocol SdkIsCreatingExternalWalletListener;
@class SdkIsCreatingExternalWalletListener;
@protocol SdkIsNetworkUserLoadingListener;
@class SdkIsNetworkUserLoadingListener;
@protocol SdkIsNetworkUserUpdatingListener;
@class SdkIsNetworkUserUpdatingListener;
@protocol SdkIsRemovingWalletListener;
@class SdkIsRemovingWalletListener;
@protocol SdkIsSendingFeedbackListener;
@class SdkIsSendingFeedbackListener;
@protocol SdkNetworkCheckCallback;
@class SdkNetworkCheckCallback;
@protocol SdkNetworkClientsListener;
@class SdkNetworkClientsListener;
@protocol SdkNetworkCreateCallback;
@class SdkNetworkCreateCallback;
@protocol SdkNetworkDeleteCallback;
@class SdkNetworkDeleteCallback;
@protocol SdkNetworkSpaceUpdate;
@class SdkNetworkSpaceUpdate;
@protocol SdkNetworkSpacesChangeListener;
@class SdkNetworkSpacesChangeListener;
@protocol SdkNetworkUserListener;
@class SdkNetworkUserListener;
@protocol SdkNetworkUserUpdateCallback;
@class SdkNetworkUserUpdateCallback;
@protocol SdkNetworkUserUpdateErrorListener;
@class SdkNetworkUserUpdateErrorListener;
@protocol SdkNetworkUserUpdateSuccessListener;
@class SdkNetworkUserUpdateSuccessListener;
@protocol SdkOfflineChangeListener;
@class SdkOfflineChangeListener;
@protocol SdkParseByJwtCallback;
@class SdkParseByJwtCallback;
@protocol SdkPaymentsListener;
@class SdkPaymentsListener;
@protocol SdkPayoutWalletListener;
@class SdkPayoutWalletListener;
@protocol SdkProvideChangeListener;
@class SdkProvideChangeListener;
@protocol SdkProvidePausedChangeListener;
@class SdkProvidePausedChangeListener;
@protocol SdkProvideSecretKeysListener;
@class SdkProvideSecretKeysListener;
@protocol SdkProviderChangeListener;
@class SdkProviderChangeListener;
@protocol SdkReceivePacket;
@class SdkReceivePacket;
@protocol SdkReferralCodeListener;
@class SdkReferralCodeListener;
@protocol SdkRemoteChangeListener;
@class SdkRemoteChangeListener;
@protocol SdkRemoveWalletCallback;
@class SdkRemoveWalletCallback;
@protocol SdkRouteLocalChangeListener;
@class SdkRouteLocalChangeListener;
@protocol SdkSelectedLocationListener;
@class SdkSelectedLocationListener;
@protocol SdkSendFeedbackCallback;
@class SdkSendFeedbackCallback;
@protocol SdkSetPayoutWalletCallback;
@class SdkSetPayoutWalletCallback;
@protocol SdkSub;
@class SdkSub;
@protocol SdkSubscriptionBalanceCallback;
@class SdkSubscriptionBalanceCallback;
@protocol SdkSubscriptionCreatePaymentIdCallback;
@class SdkSubscriptionCreatePaymentIdCallback;
@protocol SdkTunnelChangeListener;
@class SdkTunnelChangeListener;
@protocol SdkUnpaidByteCountListener;
@class SdkUnpaidByteCountListener;
@protocol SdkUpgradeGuestCallback;
@class SdkUpgradeGuestCallback;
@protocol SdkUpgradeGuestExistingCallback;
@class SdkUpgradeGuestExistingCallback;
@protocol SdkValidateAddressCallback;
@class SdkValidateAddressCallback;
@protocol SdkValidateReferralCodeCallback;
@class SdkValidateReferralCodeCallback;
@protocol SdkViewController;
@class SdkViewController;
@protocol SdkViewControllerManager;
@class SdkViewControllerManager;
@protocol SdkWalletBalanceCallback;
@class SdkWalletBalanceCallback;
@protocol SdkWalletCircleInitCallback;
@class SdkWalletCircleInitCallback;
@protocol SdkWalletCircleTransferOutCallback;
@class SdkWalletCircleTransferOutCallback;
@protocol SdkWalletValidateAddressCallback;
@class SdkWalletValidateAddressCallback;

@protocol SdkAccountPreferencesGetCallback <NSObject>
- (void)result:(SdkAccountPreferencesGetResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkAccountPreferencesSetCallback <NSObject>
- (void)result:(SdkAccountPreferencesSetResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkAccountWalletsListener <NSObject>
- (void)accountWalletsChanged;
@end

@protocol SdkActiveNetworkSpaceChangeListener <NSObject>
- (void)activeNetworkSpaceChanged:(SdkNetworkSpace* _Nullable)networkSpace;
@end

@protocol SdkAllowProductUpdatesListener <NSObject>
- (void)stateChanged:(BOOL)p0;
@end

@protocol SdkAuthCodeLoginCallback <NSObject>
- (void)result:(SdkAuthCodeLoginResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkAuthLoginCallback <NSObject>
- (void)result:(SdkAuthLoginResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkAuthLoginWithPasswordCallback <NSObject>
- (void)result:(SdkAuthLoginWithPasswordResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkAuthNetworkClientCallback <NSObject>
- (void)result:(SdkAuthNetworkClientResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkAuthPasswordResetCallback <NSObject>
- (void)result:(SdkAuthPasswordResetResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkAuthVerifyCallback <NSObject>
- (void)result:(SdkAuthVerifyResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkAuthVerifySendCallback <NSObject>
- (void)result:(SdkAuthVerifySendResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkBlockActionWindowChangeListener <NSObject>
- (void)blockActionWindowChanged:(SdkBlockActionWindow* _Nullable)blockActionWindow;
@end

@protocol SdkBlockChangeListener <NSObject>
- (void)blockChanged:(BOOL)blockEnabled;
@end

@protocol SdkBlockStatsChangeListener <NSObject>
- (void)blockStatsChanged:(SdkBlockStats* _Nullable)blockStats;
@end

@protocol SdkCommitCallback <NSObject>
- (void)complete:(BOOL)success;
@end

@protocol SdkConnectChangeListener <NSObject>
- (void)connectChanged:(BOOL)connectEnabled;
@end

@protocol SdkConnectLocationChangeListener <NSObject>
- (void)connectLocationChanged:(SdkConnectLocation* _Nullable)location;
@end

@protocol SdkConnectionStatusListener <NSObject>
- (void)connectionStatusChanged;
@end

@protocol SdkContractDetailsChangeListener <NSObject>
- (void)contractDetailsChanged:(SdkContractDetails* _Nullable)contractDetails;
@end

@protocol SdkContractStatsChangeListener <NSObject>
- (void)contractStatsChanged:(SdkContractStats* _Nullable)contractStats;
@end

@protocol SdkContractStatusChangeListener <NSObject>
- (void)contractStatusChanged:(SdkContractStatus* _Nullable)contractStatus;
@end

@protocol SdkCreateAccountWalletCallback <NSObject>
- (void)result:(SdkCreateAccountWalletResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkDevice <NSObject>
/**
 * rate limited window updates
 */
- (id<SdkSub> _Nullable)addBlockActionWindowChangeListener:(id<SdkBlockActionWindowChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addBlockChangeListener:(id<SdkBlockChangeListener> _Nullable)listener;
/**
 * rate limited
 */
- (id<SdkSub> _Nullable)addBlockStatsChangeListener:(id<SdkBlockStatsChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addConnectChangeListener:(id<SdkConnectChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addConnectLocationChangeListener:(id<SdkConnectLocationChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addContractStatusChangeListener:(id<SdkContractStatusChangeListener> _Nullable)listener;
/**
 * rate limited
 */
- (id<SdkSub> _Nullable)addEgressContractDetailsChangeListener:(id<SdkContractDetailsChangeListener> _Nullable)listener;
/**
 * rate limited
 */
- (id<SdkSub> _Nullable)addEgressContratStatsChangeListener:(id<SdkContractStatsChangeListener> _Nullable)listener;
/**
 * rate limited
 */
- (id<SdkSub> _Nullable)addIngressContractDetailsChangeListener:(id<SdkContractDetailsChangeListener> _Nullable)listener;
/**
 * rate limited
 */
- (id<SdkSub> _Nullable)addIngressContratStatsChangeListener:(id<SdkContractStatsChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addOfflineChangeListener:(id<SdkOfflineChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addProvideChangeListener:(id<SdkProvideChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addProvidePausedChangeListener:(id<SdkProvidePausedChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addProvideSecretKeysListener:(id<SdkProvideSecretKeysListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addProviderChangeListener:(id<SdkProviderChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addRouteLocalChangeListener:(id<SdkRouteLocalChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addTunnelChangeListener:(id<SdkTunnelChangeListener> _Nullable)listener;
- (void)cancel;
- (void)close;
- (SdkApi* _Nullable)getApi;
/**
 * includes applicable overrides
 */
- (SdkBlockActionWindow* _Nullable)getBlockActions;
- (BOOL)getBlockEnabled;
- (SdkBlockStats* _Nullable)getBlockStats;
- (BOOL)getBlockWhileDisconnected;
- (BOOL)getCanRefer;
- (BOOL)getCanShowRatingDialog;
- (SdkId* _Nullable)getClientId;
- (BOOL)getConnectEnabled;
- (SdkConnectLocation* _Nullable)getConnectLocation;
- (SdkContractStatus* _Nullable)getContractStatus;
- (BOOL)getDone;
- (SdkContractDetailsList* _Nullable)getEgressContractDetails;
- (SdkContractStats* _Nullable)getEgressContractStats;
- (SdkContractDetailsList* _Nullable)getIngressContractDetails;
- (SdkContractStats* _Nullable)getIngressContractStats;
- (SdkId* _Nullable)getInstanceId;
- (SdkNetworkSpace* _Nullable)getNetworkSpace;
- (BOOL)getOffline;
- (BOOL)getProvideEnabled;
- (long)getProvideMode;
- (BOOL)getProvidePaused;
- (BOOL)getProvideWhileDisconnected;
- (BOOL)getProviderEnabled;
- (BOOL)getRouteLocal;
- (BOOL)getShouldShowRatingDialog;
- (SdkDeviceStats* _Nullable)getStats;
- (BOOL)getTunnelStarted;
- (BOOL)getVpnInterfaceWhileOffline;
- (void)initProvideSecretKeys;
- (void)loadProvideSecretKeys:(SdkProvideSecretKeyList* _Nullable)provideSecretKeyList;
/**
 * host can be *.H, **.H (includes H and any subdomain), or a regex s/H/
 */
- (void)overrideBlockAction:(NSString* _Nullable)hostPattern block:(BOOL)block;
/**
 * exact match of the host pattern
 */
- (void)removeBlockActionOverride:(NSString* _Nullable)hostPattern;
- (void)removeDestination;
- (void)setBlockActionOverrideList:(SdkBlockActionOverrideList* _Nullable)blockActionOverrides;
- (void)setBlockEnabled:(BOOL)blockEnabled;
- (void)setBlockWhileDisconnected:(BOOL)blockWhileDisconnected;
- (void)setCanRefer:(BOOL)canRefer;
- (void)setCanShowRatingDialog:(BOOL)canShowRatingDialog;
- (void)setConnectLocation:(SdkConnectLocation* _Nullable)location;
- (void)setDestination:(SdkConnectLocation* _Nullable)location specs:(SdkProviderSpecList* _Nullable)specs provideMode:(long)provideMode;
- (void)setOffline:(BOOL)offline;
- (void)setProvideMode:(long)provideMode;
- (void)setProvidePaused:(BOOL)providePaused;
- (void)setProvideWhileDisconnected:(BOOL)provideWhileDisconnected;
- (void)setProviderEnabled:(BOOL)providerEnabled;
- (void)setRouteLocal:(BOOL)routeLocal;
- (void)setTunnelStarted:(BOOL)tunnelStarted;
- (void)setVpnInterfaceWhileOffline:(BOOL)vpnInterfaceWhileOffline;
- (void)shuffle;
@end

@protocol SdkFilteredLocationsListener <NSObject>
- (void)filteredLocationsChanged:(SdkFilteredLocations* _Nullable)locations state:(NSString* _Nullable)state;
@end

@protocol SdkFindLocationsCallback <NSObject>
- (void)result:(SdkFindLocationsResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkFindProviders2Callback <NSObject>
- (void)result:(SdkFindProviders2Result* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkFindProvidersCallback <NSObject>
- (void)result:(SdkFindProvidersResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkGetAccountPaymentsCallback <NSObject>
- (void)result:(SdkGetNetworkAccountPaymentsResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkGetAccountWalletsCallback <NSObject>
- (void)result:(SdkGetAccountWalletsResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkGetByClientJwtCallback <NSObject>
- (void)result:(NSString* _Nullable)result ok:(BOOL)ok;
@end

@protocol SdkGetByJwtCallback <NSObject>
- (void)result:(NSString* _Nullable)result ok:(BOOL)ok;
@end

@protocol SdkGetInstanceIdCallback <NSObject>
- (void)result:(SdkId* _Nullable)result ok:(BOOL)ok;
@end

@protocol SdkGetNetworkClientsCallback <NSObject>
- (void)result:(SdkNetworkClientsResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkGetNetworkReferralCodeCallback <NSObject>
- (void)result:(SdkGetNetworkReferralCodeResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkGetNetworkUserCallback <NSObject>
- (void)result:(SdkGetNetworkUserResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkGetPayoutWalletCallback <NSObject>
- (void)result:(SdkGetPayoutWalletIdResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkGetTransferStatsCallback <NSObject>
- (void)result:(SdkTransferStatsResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkGridListener <NSObject>
- (void)gridChanged;
@end

@protocol SdkIsCreatingExternalWalletListener <NSObject>
- (void)stateChanged:(BOOL)p0;
@end

@protocol SdkIsNetworkUserLoadingListener <NSObject>
- (void)stateChanged:(BOOL)p0;
@end

@protocol SdkIsNetworkUserUpdatingListener <NSObject>
- (void)stateChanged:(BOOL)p0;
@end

@protocol SdkIsRemovingWalletListener <NSObject>
- (void)stateChanged:(BOOL)p0;
@end

@protocol SdkIsSendingFeedbackListener <NSObject>
- (void)stateChanged:(BOOL)p0;
@end

@protocol SdkNetworkCheckCallback <NSObject>
- (void)result:(SdkNetworkCheckResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkNetworkClientsListener <NSObject>
- (void)networkClientsChanged:(SdkNetworkClientInfoList* _Nullable)networkClients;
@end

@protocol SdkNetworkCreateCallback <NSObject>
- (void)result:(SdkNetworkCreateResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkNetworkDeleteCallback <NSObject>
- (void)result:(SdkNetworkDeleteResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkNetworkSpaceUpdate <NSObject>
- (void)update:(SdkNetworkSpaceValues* _Nullable)values;
@end

@protocol SdkNetworkSpacesChangeListener <NSObject>
- (void)networkSpacesChanged;
@end

@protocol SdkNetworkUserListener <NSObject>
- (void)stateChanged;
@end

@protocol SdkNetworkUserUpdateCallback <NSObject>
- (void)result:(SdkNetworkUserUpdateResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkNetworkUserUpdateErrorListener <NSObject>
- (void)message:(NSString* _Nullable)p0;
@end

@protocol SdkNetworkUserUpdateSuccessListener <NSObject>
- (void)success;
@end

@protocol SdkOfflineChangeListener <NSObject>
- (void)offlineChanged:(BOOL)offline vpnInterfaceWhileOffline:(BOOL)vpnInterfaceWhileOffline;
@end

@protocol SdkParseByJwtCallback <NSObject>
- (void)result:(SdkByJwt* _Nullable)result ok:(BOOL)ok;
@end

@protocol SdkPaymentsListener <NSObject>
- (void)paymentsChanged;
@end

@protocol SdkPayoutWalletListener <NSObject>
- (void)payoutWalletChanged:(SdkId* _Nullable)p0;
@end

@protocol SdkProvideChangeListener <NSObject>
- (void)provideChanged:(BOOL)provideEnabled;
@end

@protocol SdkProvidePausedChangeListener <NSObject>
- (void)providePausedChanged:(BOOL)providePaused;
@end

@protocol SdkProvideSecretKeysListener <NSObject>
- (void)provideSecretKeysChanged:(SdkProvideSecretKeyList* _Nullable)provideSecretKeyList;
@end

@protocol SdkProviderChangeListener <NSObject>
- (void)providerChanged:(BOOL)providerEnabled;
@end

@protocol SdkReceivePacket <NSObject>
- (void)receivePacket:(long)ipVersion ipProtocol:(long)ipProtocol packet:(NSData* _Nullable)packet;
@end

@protocol SdkReferralCodeListener <NSObject>
- (void)referralCodeUpdated:(NSString* _Nullable)p0;
@end

@protocol SdkRemoteChangeListener <NSObject>
- (void)remoteChanged:(BOOL)remoteConnected;
@end

@protocol SdkRemoveWalletCallback <NSObject>
- (void)result:(SdkRemoveWalletResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkRouteLocalChangeListener <NSObject>
- (void)routeLocalChanged:(BOOL)routeLocal;
@end

@protocol SdkSelectedLocationListener <NSObject>
- (void)selectedLocationChanged:(SdkConnectLocation* _Nullable)location;
@end

@protocol SdkSendFeedbackCallback <NSObject>
- (void)result:(SdkFeedbackSendResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkSetPayoutWalletCallback <NSObject>
- (void)result:(SdkSetPayoutWalletResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkSub <NSObject>
- (void)close;
@end

@protocol SdkSubscriptionBalanceCallback <NSObject>
- (void)result:(SdkSubscriptionBalanceResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkSubscriptionCreatePaymentIdCallback <NSObject>
- (void)result:(SdkSubscriptionCreatePaymentIdResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkTunnelChangeListener <NSObject>
- (void)tunnelChanged:(BOOL)tunnelStarted;
@end

@protocol SdkUnpaidByteCountListener <NSObject>
- (void)stateChanged:(int64_t)p0;
@end

@protocol SdkUpgradeGuestCallback <NSObject>
- (void)result:(SdkUpgradeGuestResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkUpgradeGuestExistingCallback <NSObject>
- (void)result:(SdkUpgradeGuestExistingResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkValidateAddressCallback <NSObject>
- (void)sendResult:(BOOL)valid;
@end

@protocol SdkValidateReferralCodeCallback <NSObject>
- (void)result:(SdkValidateReferralCodeResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkViewController <NSObject>
- (void)close;
- (void)start;
- (void)stop;
@end

@protocol SdkViewControllerManager <NSObject>
- (void)close;
- (void)closeViewController:(id<SdkViewController> _Nullable)vc;
- (SdkAccountPreferencesViewController* _Nullable)openAccountPreferencesViewController;
- (SdkAccountViewController* _Nullable)openAccountViewController;
- (SdkConnectViewController* _Nullable)openConnectViewController;
- (SdkDevicesViewController* _Nullable)openDevicesViewController;
- (SdkFeedbackViewController* _Nullable)openFeedbackViewController;
- (SdkLocationsViewController* _Nullable)openLocationsViewController;
- (SdkNetworkUserViewController* _Nullable)openNetworkUserViewController;
- (SdkProvideViewController* _Nullable)openProvideViewController;
- (SdkReferralCodeViewController* _Nullable)openReferralCodeViewController;
- (SdkWalletViewController* _Nullable)openWalletViewController;
@end

@protocol SdkWalletBalanceCallback <NSObject>
- (void)result:(SdkWalletBalanceResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkWalletCircleInitCallback <NSObject>
- (void)result:(SdkWalletCircleInitResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkWalletCircleTransferOutCallback <NSObject>
- (void)result:(SdkWalletCircleTransferOutResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@protocol SdkWalletValidateAddressCallback <NSObject>
- (void)result:(SdkWalletValidateAddressResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkAccountPayment : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable paymentId;
@property (nonatomic) SdkId* _Nullable paymentPlanId;
@property (nonatomic) SdkId* _Nullable walletId;
@property (nonatomic) SdkId* _Nullable networkId;
@property (nonatomic) int64_t payoutByteCount;
@property (nonatomic) int64_t payout;
@property (nonatomic) SdkTime* _Nullable minSweepTime;
@property (nonatomic) SdkTime* _Nullable createTime;
@property (nonatomic) NSString* _Nonnull paymentRecord;
@property (nonatomic) NSString* _Nonnull tokenType;
@property (nonatomic) double tokenAmount;
@property (nonatomic) SdkTime* _Nullable paymentTime;
@property (nonatomic) NSString* _Nonnull paymentReceipt;
@property (nonatomic) NSString* _Nonnull walletAddress;
@property (nonatomic) BOOL completed;
@property (nonatomic) SdkTime* _Nullable completeTime;
@property (nonatomic) BOOL canceled;
@property (nonatomic) SdkTime* _Nullable cancelTime;
@end

@interface SdkAccountPaymentsList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(SdkAccountPayment* _Nullable)value;
- (BOOL)contains:(SdkAccountPayment* _Nullable)v;
- (SdkAccountPayment* _Nullable)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkAccountPreferencesGetResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) BOOL productUpdates;
@end

@interface SdkAccountPreferencesSetArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) BOOL productUpdates;
@end

@interface SdkAccountPreferencesSetResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@end

@interface SdkAccountPreferencesViewController : NSObject <goSeqRefInterface, SdkSub, SdkViewController> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (id<SdkSub> _Nullable)addAllowProductUpdatesListener:(id<SdkAllowProductUpdatesListener> _Nullable)listener;
- (void)close;
- (BOOL)getAllowProductUpdates;
- (void)start;
- (void)stop;
- (void)updateAllowProductUpdates:(BOOL)allow;
@end

@interface SdkAccountViewController : NSObject <goSeqRefInterface, SdkSub, SdkViewController> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (void)close;
- (void)start;
- (void)stop;
- (void)walletValidateAddress:(NSString* _Nullable)address callback:(id<SdkWalletValidateAddressCallback> _Nullable)callback;
@end

@interface SdkAccountWallet : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable walletId;
@property (nonatomic) NSString* _Nonnull circleWalletId;
@property (nonatomic) SdkId* _Nullable networkId;
@property (nonatomic) NSString* _Nonnull walletType;
@property (nonatomic) NSString* _Nonnull blockchain;
@property (nonatomic) NSString* _Nonnull walletAddress;
@property (nonatomic) BOOL active;
@property (nonatomic) NSString* _Nonnull defaultTokenType;
@property (nonatomic) SdkTime* _Nullable createTime;
@end

@interface SdkAccountWalletsList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(SdkAccountWallet* _Nullable)value;
- (BOOL)contains:(SdkAccountWallet* _Nullable)v;
- (SdkAccountWallet* _Nullable)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkApi : NSObject <goSeqRefInterface, SdkSub> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (void)accountPreferencesGet:(id<SdkAccountPreferencesGetCallback> _Nullable)callback;
- (void)accountPreferencesUpdate:(SdkAccountPreferencesSetArgs* _Nullable)accountPreferences callback:(id<SdkAccountPreferencesSetCallback> _Nullable)callback;
- (SdkAuthCodeLoginResult* _Nullable)authCodeLogin:(SdkAuthCodeLoginArgs* _Nullable)codeLoginArgs callback:(id<SdkAuthCodeLoginCallback> _Nullable)callback error:(NSError* _Nullable* _Nullable)error;
- (void)authLogin:(SdkAuthLoginArgs* _Nullable)authLogin callback:(id<SdkAuthLoginCallback> _Nullable)callback;
- (void)authLoginWithPassword:(SdkAuthLoginWithPasswordArgs* _Nullable)authLoginWithPassword callback:(id<SdkAuthLoginWithPasswordCallback> _Nullable)callback;
- (void)authNetworkClient:(SdkAuthNetworkClientArgs* _Nullable)authNetworkClient callback:(id<SdkAuthNetworkClientCallback> _Nullable)callback;
- (void)authPasswordReset:(SdkAuthPasswordResetArgs* _Nullable)authPasswordReset callback:(id<SdkAuthPasswordResetCallback> _Nullable)callback;
- (void)authVerify:(SdkAuthVerifyArgs* _Nullable)authVerify callback:(id<SdkAuthVerifyCallback> _Nullable)callback;
- (void)authVerifySend:(SdkAuthVerifySendArgs* _Nullable)authVerifySend callback:(id<SdkAuthVerifySendCallback> _Nullable)callback;
- (void)close;
- (void)createAccountWallet:(SdkCreateAccountWalletArgs* _Nullable)createAccountWallet callback:(id<SdkCreateAccountWalletCallback> _Nullable)callback;
- (void)findLocations:(SdkFindLocationsArgs* _Nullable)findLocations callback:(id<SdkFindLocationsCallback> _Nullable)callback;
- (void)findProviderLocations:(SdkFindLocationsArgs* _Nullable)findLocations callback:(id<SdkFindLocationsCallback> _Nullable)callback;
- (void)findProviders:(SdkFindProvidersArgs* _Nullable)findProviders callback:(id<SdkFindProvidersCallback> _Nullable)callback;
- (void)findProviders2:(SdkFindProviders2Args* _Nullable)findProviders2 callback:(id<SdkFindProviders2Callback> _Nullable)callback;
- (void)getAccountPayments:(id<SdkGetAccountPaymentsCallback> _Nullable)callback;
- (void)getAccountWallets:(id<SdkGetAccountWalletsCallback> _Nullable)callback;
- (NSString* _Nonnull)getByJwt;
- (void)getNetworkClients:(id<SdkGetNetworkClientsCallback> _Nullable)callback;
- (void)getNetworkReferralCode:(id<SdkGetNetworkReferralCodeCallback> _Nullable)callback;
- (void)getNetworkUser:(id<SdkGetNetworkUserCallback> _Nullable)callback;
- (void)getPayoutWallet:(id<SdkGetPayoutWalletCallback> _Nullable)callback;
- (void)getProviderLocations:(id<SdkFindLocationsCallback> _Nullable)callback;
- (void)getTransferStats:(id<SdkGetTransferStatsCallback> _Nullable)callback;
- (void)networkCheck:(SdkNetworkCheckArgs* _Nullable)networkCheck callback:(id<SdkNetworkCheckCallback> _Nullable)callback;
- (void)networkCreate:(SdkNetworkCreateArgs* _Nullable)networkCreate callback:(id<SdkNetworkCreateCallback> _Nullable)callback;
- (void)networkDelete:(id<SdkNetworkDeleteCallback> _Nullable)callback;
- (void)networkUserUpdate:(SdkNetworkUserUpdateArgs* _Nullable)updateNetworkUser callback:(id<SdkNetworkUserUpdateCallback> _Nullable)callback;
- (void)removeWallet:(SdkRemoveWalletArgs* _Nullable)removeWallet callback:(id<SdkRemoveWalletCallback> _Nullable)callback;
- (void)sendFeedback:(SdkFeedbackSendArgs* _Nullable)sendFeedback callback:(id<SdkSendFeedbackCallback> _Nullable)callback;
/**
 * this gets attached to api calls that need it
 */
- (void)setByJwt:(NSString* _Nullable)byJwt;
- (void)setPayoutWallet:(SdkSetPayoutWalletArgs* _Nullable)payoutWallet callback:(id<SdkSetPayoutWalletCallback> _Nullable)callback;
- (void)subscriptionBalance:(id<SdkSubscriptionBalanceCallback> _Nullable)callback;
- (void)subscriptionCreatePaymentId:(SdkSubscriptionCreatePaymentIdArgs* _Nullable)createPaymentId callback:(id<SdkSubscriptionCreatePaymentIdCallback> _Nullable)callback;
- (void)upgradeGuest:(SdkUpgradeGuestArgs* _Nullable)upgradeGuest callback:(id<SdkUpgradeGuestCallback> _Nullable)callback;
- (void)upgradeGuestExisting:(SdkUpgradeGuestExistingArgs* _Nullable)upgradeGuest callback:(id<SdkUpgradeGuestExistingCallback> _Nullable)callback;
- (void)validateReferralCode:(SdkValidateReferralCodeArgs* _Nullable)validateReferralCode callback:(id<SdkValidateReferralCodeCallback> _Nullable)callback;
- (void)walletBalance:(id<SdkWalletBalanceCallback> _Nullable)callback;
- (void)walletCircleInit:(id<SdkWalletCircleInitCallback> _Nullable)callback;
- (void)walletCircleTransferOut:(SdkWalletCircleTransferOutArgs* _Nullable)walletCircleTransferOut callback:(id<SdkWalletCircleTransferOutCallback> _Nullable)callback;
- (void)walletValidateAddress:(SdkWalletValidateAddressArgs* _Nullable)walletValidateAddress callback:(id<SdkWalletValidateAddressCallback> _Nullable)callback;
@end

@interface SdkAsyncLocalState : NSObject <goSeqRefInterface, SdkSub> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init:(NSString* _Nullable)localStorageHome;
- (void)close;
- (void)getByClientJwt:(id<SdkGetByClientJwtCallback> _Nullable)callback;
- (void)getByJwt:(id<SdkGetByJwtCallback> _Nullable)callback;
- (void)getInstanceId:(id<SdkGetInstanceIdCallback> _Nullable)callback;
/**
 * get the sync local state
 */
- (SdkLocalState* _Nullable)getLocalState;
- (void)logout:(id<SdkCommitCallback> _Nullable)callback;
- (void)parseByJwt:(id<SdkParseByJwtCallback> _Nullable)callback;
- (void)setByClientJwt:(NSString* _Nullable)byClientJwt callback:(id<SdkCommitCallback> _Nullable)callback;
/**
 * clears the clientjwt and instanceid if differnet
 */
- (void)setByJwt:(NSString* _Nullable)byJwt callback:(id<SdkCommitCallback> _Nullable)callback;
@end

@interface SdkAuthCodeLoginArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull authCode;
@end

@interface SdkAuthCodeLoginError : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull message;
@end

@interface SdkAuthCodeLoginResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull jwt;
@property (nonatomic) SdkAuthCodeLoginError* _Nullable error;
@end

/**
 * `model.AuthLoginArgs`
 */
@interface SdkAuthLoginArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull userAuth;
@property (nonatomic) NSString* _Nonnull authJwtType;
@property (nonatomic) NSString* _Nonnull authJwt;
@end

/**
 * `model.AuthLoginResult`
 */
@interface SdkAuthLoginResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull userName;
@property (nonatomic) NSString* _Nonnull userAuth;
@property (nonatomic) SdkStringList* _Nullable authAllowed;
@property (nonatomic) SdkAuthLoginResultError* _Nullable error;
@property (nonatomic) SdkAuthLoginResultNetwork* _Nullable network;
@end

/**
 * `model.AuthLoginResultError`
 */
@interface SdkAuthLoginResultError : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull suggestedUserAuth;
@property (nonatomic) NSString* _Nonnull message;
@end

/**
 * `model.AuthLoginResultNetwork`
 */
@interface SdkAuthLoginResultNetwork : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull byJwt;
@end

@interface SdkAuthLoginWithPasswordArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull userAuth;
@property (nonatomic) NSString* _Nonnull password;
@property (nonatomic) BOOL verifyOtpNumeric;
@end

@interface SdkAuthLoginWithPasswordResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkAuthLoginWithPasswordResultVerification* _Nullable verificationRequired;
@property (nonatomic) SdkAuthLoginWithPasswordResultNetwork* _Nullable network;
@property (nonatomic) SdkAuthLoginWithPasswordResultError* _Nullable error;
@end

@interface SdkAuthLoginWithPasswordResultError : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull message;
@end

@interface SdkAuthLoginWithPasswordResultNetwork : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull byJwt;
@property (nonatomic) NSString* _Nonnull networkName;
@end

@interface SdkAuthLoginWithPasswordResultVerification : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull userAuth;
@end

@interface SdkAuthNetworkClientArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * FIXME how to bring this back as optional with gomobile. Use a new type *OptionalId?
if omitted, a new client_id is created
ClientId string `json:"client_id,omitempty"`
 */
@property (nonatomic) NSString* _Nonnull description;
@property (nonatomic) NSString* _Nonnull deviceSpec;
@end

@interface SdkAuthNetworkClientError : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * can be a hard limit or a rate limit
 */
@property (nonatomic) BOOL clientLimitExceeded;
@property (nonatomic) NSString* _Nonnull message;
@end

@interface SdkAuthNetworkClientResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull byClientJwt;
@property (nonatomic) SdkAuthNetworkClientError* _Nullable error;
@end

@interface SdkAuthPasswordResetArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull userAuth;
@end

@interface SdkAuthPasswordResetResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull userAuth;
@end

@interface SdkAuthVerifyArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull userAuth;
@property (nonatomic) NSString* _Nonnull verifyCode;
@end

@interface SdkAuthVerifyResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkAuthVerifyResultNetwork* _Nullable network;
@property (nonatomic) SdkAuthVerifyResultError* _Nullable error;
@end

@interface SdkAuthVerifyResultError : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull message;
@end

@interface SdkAuthVerifyResultNetwork : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull byJwt;
@end

@interface SdkAuthVerifySendArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull userAuth;
@property (nonatomic) BOOL useNumeric;
@end

@interface SdkAuthVerifySendResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull userAuth;
@end

@interface SdkBlockAction : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int64_t time;
@property (nonatomic) NSString* _Nonnull host;
@property (nonatomic) BOOL block;
@property (nonatomic) BOOL override;
@property (nonatomic) BOOL blockOverride;
@end

@interface SdkBlockActionList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(SdkBlockAction* _Nullable)value;
- (BOOL)contains:(SdkBlockAction* _Nullable)v;
- (SdkBlockAction* _Nullable)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkBlockActionOverride : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull host;
@property (nonatomic) BOOL blockOverride;
@end

@interface SdkBlockActionOverrideList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(SdkBlockActionOverride* _Nullable)value;
- (BOOL)contains:(SdkBlockActionOverride* _Nullable)v;
- (SdkBlockActionOverride* _Nullable)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkBlockActionWindow : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkBlockActionOverrideList* _Nullable blockActionOverrides;
@property (nonatomic) SdkBlockActionList* _Nullable blockActions;
@end

@interface SdkBlockStats : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long allowedCount;
@property (nonatomic) long blockedCount;
@end

@interface SdkByJwt : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable userId;
@property (nonatomic) NSString* _Nonnull networkName;
@property (nonatomic) SdkId* _Nullable networkId;
@property (nonatomic) BOOL guestMode;
@end

@interface SdkCircleUserToken : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull userToken;
@property (nonatomic) NSString* _Nonnull encryptionKey;
@end

@interface SdkCircleWalletInfo : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull walletId;
@property (nonatomic) NSString* _Nonnull tokenId;
@property (nonatomic) NSString* _Nonnull blockchain;
@property (nonatomic) NSString* _Nonnull blockchainSymbol;
@property (nonatomic) NSString* _Nonnull createDate;
@property (nonatomic) int64_t balanceUsdcNanoCents;
@end

@interface SdkConnectGrid : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (int32_t)getHeight;
- (SdkProviderGridPoint* _Nullable)getProviderGridPointByClientId:(SdkId* _Nullable)clientId;
- (SdkProviderGridPointList* _Nullable)getProviderGridPointList;
- (int32_t)getWidth;
- (int32_t)getWindowCurrentSize;
- (int32_t)getWindowTargetSize;
@end

/**
 * merged location and location group
 */
@interface SdkConnectLocation : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkConnectLocationId* _Nullable connectLocationId;
@property (nonatomic) NSString* _Nonnull name;
@property (nonatomic) int32_t providerCount;
@property (nonatomic) BOOL promoted;
@property (nonatomic) int32_t matchDistance;
@property (nonatomic) NSString* _Nonnull locationType;
@property (nonatomic) NSString* _Nonnull city;
@property (nonatomic) NSString* _Nonnull region;
@property (nonatomic) NSString* _Nonnull country;
@property (nonatomic) NSString* _Nonnull countryCode;
@property (nonatomic) SdkId* _Nullable cityLocationId;
@property (nonatomic) SdkId* _Nullable regionLocationId;
@property (nonatomic) SdkId* _Nullable countryLocationId;
- (BOOL)equals:(SdkConnectLocation* _Nullable)b;
- (BOOL)isDevice;
- (BOOL)isGroup;
- (SdkConnectLocation* _Nullable)toCountry;
- (SdkConnectLocation* _Nullable)toRegion;
@end

/**
 * merged location and location group
 */
@interface SdkConnectLocationId : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * if set, the location is a direct connection to another device
 */
@property (nonatomic) SdkId* _Nullable clientId;
@property (nonatomic) SdkId* _Nullable locationId;
@property (nonatomic) SdkId* _Nullable locationGroupId;
@property (nonatomic) BOOL bestAvailable;
- (long)cmp:(SdkConnectLocationId* _Nullable)b;
- (BOOL)isDevice;
- (BOOL)isGroup;
- (NSString* _Nonnull)string;
@end

@interface SdkConnectLocationList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(SdkConnectLocation* _Nullable)value;
- (BOOL)contains:(SdkConnectLocation* _Nullable)v;
- (SdkConnectLocation* _Nullable)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkConnectViewController : NSObject <goSeqRefInterface, SdkConnectLocationChangeListener, SdkSub, SdkViewController> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (id<SdkSub> _Nullable)addConnectionStatusListener:(id<SdkConnectionStatusListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addGridListener:(id<SdkGridListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addSelectedLocationListener:(id<SdkSelectedLocationListener> _Nullable)listener;
- (void)close;
- (void)connect:(SdkConnectLocation* _Nullable)location;
- (void)connectBestAvailable;
/**
 * ConnectLocationChangeListener
 */
- (void)connectLocationChanged:(SdkConnectLocation* _Nullable)location;
- (void)disconnect;
- (BOOL)getConnected;
- (NSString* _Nonnull)getConnectionStatus;
- (SdkConnectGrid* _Nullable)getGrid;
- (SdkConnectLocation* _Nullable)getSelectedLocation;
- (void)start;
- (void)stop;
@end

/**
 *        contract
         |   ^
contract |   | companion contract
transfer |   | transfer
path     |   | path
         ⌄   |
       companion contract
 */
@interface SdkContractDetails : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable contractId;
@property (nonatomic) int64_t contractUsedByteCount;
@property (nonatomic) int64_t contractByteCount;
@property (nonatomic) long contractBitRate;
@property (nonatomic) SdkTransferPath* _Nullable contractTransferPath;
@property (nonatomic) SdkId* _Nullable companionContractId;
@property (nonatomic) int64_t companionContractUsedByteCount;
@property (nonatomic) int64_t companionContractByteCount;
@property (nonatomic) long companionContractBitRate;
@property (nonatomic) SdkTransferPath* _Nullable companionContractTransferPath;
@property (nonatomic) NSString* _Nonnull ipv4;
@property (nonatomic) NSString* _Nonnull ipv6;
@property (nonatomic) NSString* _Nonnull country;
@end

@interface SdkContractDetailsList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(SdkContractDetails* _Nullable)value;
- (BOOL)contains:(SdkContractDetails* _Nullable)v;
- (SdkContractDetails* _Nullable)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkContractStats : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int64_t contractUsedByteCount;
@property (nonatomic) int64_t contractByteCount;
@property (nonatomic) long contractBitRate;
@property (nonatomic) int64_t companionContractUsedByteCount;
@property (nonatomic) int64_t companionContractByteCount;
@property (nonatomic) long companionContractBitRate;
@end

@interface SdkContractStatus : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) BOOL insufficientBalance;
@property (nonatomic) BOOL noPermission;
@property (nonatomic) BOOL premium;
@end

@interface SdkCreateAccountWalletArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull blockchain;
@property (nonatomic) NSString* _Nonnull walletAddress;
@property (nonatomic) NSString* _Nonnull defaultTokenType;
@end

@interface SdkCreateAccountWalletResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable walletId;
@end

@interface SdkDeviceLocal : NSObject <goSeqRefInterface, SdkDevice, SdkSub, SdkViewControllerManager> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)initWithDefaults:(SdkNetworkSpace* _Nullable)networkSpace byJwt:(NSString* _Nullable)byJwt deviceDescription:(NSString* _Nullable)deviceDescription deviceSpec:(NSString* _Nullable)deviceSpec appVersion:(NSString* _Nullable)appVersion instanceId:(SdkId* _Nullable)instanceId enableRpc:(BOOL)enableRpc;
- (id<SdkSub> _Nullable)addBlockActionWindowChangeListener:(id<SdkBlockActionWindowChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addBlockChangeListener:(id<SdkBlockChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addBlockStatsChangeListener:(id<SdkBlockStatsChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addConnectChangeListener:(id<SdkConnectChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addConnectLocationChangeListener:(id<SdkConnectLocationChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addContractStatusChangeListener:(id<SdkContractStatusChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addEgressContractDetailsChangeListener:(id<SdkContractDetailsChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addEgressContratStatsChangeListener:(id<SdkContractStatsChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addIngressContractDetailsChangeListener:(id<SdkContractDetailsChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addIngressContratStatsChangeListener:(id<SdkContractStatsChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addOfflineChangeListener:(id<SdkOfflineChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addProvideChangeListener:(id<SdkProvideChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addProvidePausedChangeListener:(id<SdkProvidePausedChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addProvideSecretKeysListener:(id<SdkProvideSecretKeysListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addProviderChangeListener:(id<SdkProviderChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addReceivePacket:(id<SdkReceivePacket> _Nullable)receivePacket;
- (id<SdkSub> _Nullable)addRouteLocalChangeListener:(id<SdkRouteLocalChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addTunnelChangeListener:(id<SdkTunnelChangeListener> _Nullable)listener;
- (void)cancel;
- (void)close;
- (void)closeViewController:(id<SdkViewController> _Nullable)vc;
- (SdkApi* _Nullable)getApi;
- (SdkBlockActionWindow* _Nullable)getBlockActions;
- (BOOL)getBlockEnabled;
- (SdkBlockStats* _Nullable)getBlockStats;
- (BOOL)getBlockWhileDisconnected;
- (BOOL)getCanRefer;
- (BOOL)getCanShowRatingDialog;
- (SdkId* _Nullable)getClientId;
- (BOOL)getConnectEnabled;
- (SdkConnectLocation* _Nullable)getConnectLocation;
- (SdkContractStatus* _Nullable)getContractStatus;
- (BOOL)getDone;
- (SdkContractDetailsList* _Nullable)getEgressContractDetails;
- (SdkContractStats* _Nullable)getEgressContractStats;
- (SdkContractDetailsList* _Nullable)getIngressContractDetails;
- (SdkContractStats* _Nullable)getIngressContractStats;
- (SdkId* _Nullable)getInstanceId;
- (SdkNetworkSpace* _Nullable)getNetworkSpace;
- (BOOL)getOffline;
- (BOOL)getProvideEnabled;
- (long)getProvideMode;
- (BOOL)getProvidePaused;
- (SdkProvideSecretKeyList* _Nullable)getProvideSecretKeys;
- (BOOL)getProvideWhileDisconnected;
- (BOOL)getProviderEnabled;
- (BOOL)getRouteLocal;
- (BOOL)getShouldShowRatingDialog;
- (SdkDeviceStats* _Nullable)getStats;
- (BOOL)getTunnelStarted;
- (BOOL)getVpnInterfaceWhileOffline;
- (void)initProvideSecretKeys;
- (void)loadProvideSecretKeys:(SdkProvideSecretKeyList* _Nullable)provideSecretKeyList;
- (SdkAccountPreferencesViewController* _Nullable)openAccountPreferencesViewController;
- (SdkAccountViewController* _Nullable)openAccountViewController;
- (SdkConnectViewController* _Nullable)openConnectViewController;
- (SdkDevicesViewController* _Nullable)openDevicesViewController;
- (SdkFeedbackViewController* _Nullable)openFeedbackViewController;
- (SdkLocationsViewController* _Nullable)openLocationsViewController;
- (SdkNetworkUserViewController* _Nullable)openNetworkUserViewController;
- (SdkProvideViewController* _Nullable)openProvideViewController;
- (SdkReferralCodeViewController* _Nullable)openReferralCodeViewController;
- (SdkWalletViewController* _Nullable)openWalletViewController;
- (void)overrideBlockAction:(NSString* _Nullable)hostPattern block:(BOOL)block;
- (void)removeBlockActionOverride:(NSString* _Nullable)hostPattern;
- (void)removeDestination;
- (BOOL)sendPacket:(NSData* _Nullable)packet n:(int32_t)n;
- (void)setBlockActionOverrideList:(SdkBlockActionOverrideList* _Nullable)blockActionOverrides;
- (void)setBlockEnabled:(BOOL)blockEnabled;
- (void)setBlockWhileDisconnected:(BOOL)blockWhileDisconnected;
- (void)setCanRefer:(BOOL)canRefer;
- (void)setCanShowRatingDialog:(BOOL)canShowRatingDialog;
- (void)setConnectLocation:(SdkConnectLocation* _Nullable)location;
- (void)setDestination:(SdkConnectLocation* _Nullable)location specs:(SdkProviderSpecList* _Nullable)specs provideMode:(long)provideMode;
- (void)setOffline:(BOOL)offline;
- (void)setProvideMode:(long)provideMode;
- (void)setProvidePaused:(BOOL)providePaused;
- (void)setProvideWhileDisconnected:(BOOL)provideWhileDisconnected;
- (void)setProviderEnabled:(BOOL)providerEnabled;
- (void)setRouteLocal:(BOOL)routeLocal;
- (void)setTunnelStarted:(BOOL)tunnelStarted;
- (void)setVpnInterfaceWhileOffline:(BOOL)vpnInterfaceWhileOffline;
- (void)shuffle;
@end

@interface SdkDeviceLocalRpc : NSObject <goSeqRefInterface, SdkConnectChangeListener, SdkConnectLocationChangeListener, SdkContractStatusChangeListener, SdkOfflineChangeListener, SdkProvideChangeListener, SdkProvidePausedChangeListener, SdkProvideSecretKeysListener, SdkRouteLocalChangeListener, SdkSub, SdkTunnelChangeListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped method DeviceLocalRpc.AddConnectChangeListener with unsupported parameter or return types

// skipped method DeviceLocalRpc.AddConnectLocationChangeListener with unsupported parameter or return types

// skipped method DeviceLocalRpc.AddContractStatusChangeListener with unsupported parameter or return types

// skipped method DeviceLocalRpc.AddOfflineChangeListener with unsupported parameter or return types

// skipped method DeviceLocalRpc.AddProvideChangeListener with unsupported parameter or return types

// skipped method DeviceLocalRpc.AddProvidePausedChangeListener with unsupported parameter or return types

// skipped method DeviceLocalRpc.AddProvideSecretKeysListener with unsupported parameter or return types

// skipped method DeviceLocalRpc.AddRouteLocalChangeListener with unsupported parameter or return types

// skipped method DeviceLocalRpc.AddTunnelChangeListener with unsupported parameter or return types

// skipped method DeviceLocalRpc.AddWindowMonitorEventListener with unsupported parameter or return types

- (void)close;
/**
 * ConnectChangeListener
 */
- (void)connectChanged:(BOOL)connectEnabled;
/**
 * ConnectLocationChangeListener
 */
- (void)connectLocationChanged:(SdkConnectLocation* _Nullable)location;
/**
 * ContractStatusChangeListener
 */
- (void)contractStatusChanged:(SdkContractStatus* _Nullable)contractStatus;
// skipped method DeviceLocalRpc.EgressSecurityPolicyStats with unsupported parameter or return types

// skipped method DeviceLocalRpc.GetCanRefer with unsupported parameter or return types

// skipped method DeviceLocalRpc.GetCanShowRatingDialog with unsupported parameter or return types

// skipped method DeviceLocalRpc.GetConnectEnabled with unsupported parameter or return types

// skipped method DeviceLocalRpc.GetConnectLocation with unsupported parameter or return types

// skipped method DeviceLocalRpc.GetContractStatus with unsupported parameter or return types

// skipped method DeviceLocalRpc.GetOffline with unsupported parameter or return types

// skipped method DeviceLocalRpc.GetProvideEnabled with unsupported parameter or return types

// skipped method DeviceLocalRpc.GetProvideMode with unsupported parameter or return types

// skipped method DeviceLocalRpc.GetProvidePaused with unsupported parameter or return types

// skipped method DeviceLocalRpc.GetProvideWhileDisconnected with unsupported parameter or return types

// skipped method DeviceLocalRpc.GetRouteLocal with unsupported parameter or return types

// skipped method DeviceLocalRpc.GetShouldShowRatingDialog with unsupported parameter or return types

// skipped method DeviceLocalRpc.GetStats with unsupported parameter or return types

// skipped method DeviceLocalRpc.GetTunnelStarted with unsupported parameter or return types

// skipped method DeviceLocalRpc.GetVpnInterfaceWhileOffline with unsupported parameter or return types

// skipped method DeviceLocalRpc.HttpGetRaw with unsupported parameter or return types

// skipped method DeviceLocalRpc.HttpPostRaw with unsupported parameter or return types

// skipped method DeviceLocalRpc.IngressSecurityPolicyStats with unsupported parameter or return types

// skipped method DeviceLocalRpc.InitProvideSecretKeys with unsupported parameter or return types

// skipped method DeviceLocalRpc.LoadProvideSecretKeys with unsupported parameter or return types

/**
 * OfflineChangeListener
 */
- (void)offlineChanged:(BOOL)offline vpnInterfaceWhileOffline:(BOOL)vpnInterfaceWhileOffline;
/**
 * ProvideChangeListener
 */
- (void)provideChanged:(BOOL)provideEnabled;
/**
 * ProvidePausedChangeListener
 */
- (void)providePausedChanged:(BOOL)providePaused;
/**
 * ProvideSecretKeysListener
 */
- (void)provideSecretKeysChanged:(SdkProvideSecretKeyList* _Nullable)provideSecretKeyList;
// skipped method DeviceLocalRpc.RemoveConnectChangeListener with unsupported parameter or return types

// skipped method DeviceLocalRpc.RemoveConnectLocationChangeListener with unsupported parameter or return types

// skipped method DeviceLocalRpc.RemoveContractStatusChangeListener with unsupported parameter or return types

// skipped method DeviceLocalRpc.RemoveDestination with unsupported parameter or return types

// skipped method DeviceLocalRpc.RemoveOfflineChangeListener with unsupported parameter or return types

// skipped method DeviceLocalRpc.RemoveProvideChangeListener with unsupported parameter or return types

// skipped method DeviceLocalRpc.RemoveProvidePausedChangeListener with unsupported parameter or return types

// skipped method DeviceLocalRpc.RemoveProvideSecretKeysListener with unsupported parameter or return types

// skipped method DeviceLocalRpc.RemoveRouteLocalChangeListener with unsupported parameter or return types

// skipped method DeviceLocalRpc.RemoveTunnelChangeListener with unsupported parameter or return types

// skipped method DeviceLocalRpc.RemoveWindowMonitorEventListener with unsupported parameter or return types

/**
 * RouteLocalChangeListener
 */
- (void)routeLocalChanged:(BOOL)routeLocal;
// skipped method DeviceLocalRpc.SetCanRefer with unsupported parameter or return types

// skipped method DeviceLocalRpc.SetCanShowRatingDialog with unsupported parameter or return types

// skipped method DeviceLocalRpc.SetConnectLocation with unsupported parameter or return types

// skipped method DeviceLocalRpc.SetDestination with unsupported parameter or return types

// skipped method DeviceLocalRpc.SetOffline with unsupported parameter or return types

// skipped method DeviceLocalRpc.SetProvideMode with unsupported parameter or return types

// skipped method DeviceLocalRpc.SetProvidePaused with unsupported parameter or return types

// skipped method DeviceLocalRpc.SetProvideWhileDisconnected with unsupported parameter or return types

// skipped method DeviceLocalRpc.SetRouteLocal with unsupported parameter or return types

// skipped method DeviceLocalRpc.SetTunnelStarted with unsupported parameter or return types

// skipped method DeviceLocalRpc.SetVpnInterfaceWhileOffline with unsupported parameter or return types

// skipped method DeviceLocalRpc.Shuffle with unsupported parameter or return types

// skipped method DeviceLocalRpc.Sync with unsupported parameter or return types

// skipped method DeviceLocalRpc.SyncReverse with unsupported parameter or return types

/**
 * TunnelChangeListener
 */
- (void)tunnelChanged:(BOOL)tunnelStarted;
// skipped method DeviceLocalRpc.WindowMonitorEventCallback with unsupported parameter or return types

// skipped method DeviceLocalRpc.WindowMonitorEvents with unsupported parameter or return types

@end

@interface SdkDeviceRemote : NSObject <goSeqRefInterface, SdkDevice, SdkSub, SdkViewControllerManager> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)initWithDefaults:(SdkNetworkSpace* _Nullable)networkSpace byJwt:(NSString* _Nullable)byJwt instanceId:(SdkId* _Nullable)instanceId;
- (id<SdkSub> _Nullable)addBlockActionWindowChangeListener:(id<SdkBlockActionWindowChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addBlockChangeListener:(id<SdkBlockChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addBlockStatsChangeListener:(id<SdkBlockStatsChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addConnectChangeListener:(id<SdkConnectChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addConnectLocationChangeListener:(id<SdkConnectLocationChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addContractStatusChangeListener:(id<SdkContractStatusChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addEgressContractDetailsChangeListener:(id<SdkContractDetailsChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addEgressContratStatsChangeListener:(id<SdkContractStatsChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addIngressContractDetailsChangeListener:(id<SdkContractDetailsChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addIngressContratStatsChangeListener:(id<SdkContractStatsChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addOfflineChangeListener:(id<SdkOfflineChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addProvideChangeListener:(id<SdkProvideChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addProvidePausedChangeListener:(id<SdkProvidePausedChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addProvideSecretKeysListener:(id<SdkProvideSecretKeysListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addProviderChangeListener:(id<SdkProviderChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addRemoteChangeListener:(id<SdkRemoteChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addRouteLocalChangeListener:(id<SdkRouteLocalChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addTunnelChangeListener:(id<SdkTunnelChangeListener> _Nullable)listener;
- (void)cancel;
- (void)close;
- (void)closeViewController:(id<SdkViewController> _Nullable)vc;
- (SdkApi* _Nullable)getApi;
- (SdkBlockActionWindow* _Nullable)getBlockActions;
- (BOOL)getBlockEnabled;
- (SdkBlockStats* _Nullable)getBlockStats;
- (BOOL)getBlockWhileDisconnected;
- (BOOL)getCanRefer;
- (BOOL)getCanShowRatingDialog;
- (SdkId* _Nullable)getClientId;
- (BOOL)getConnectEnabled;
- (SdkConnectLocation* _Nullable)getConnectLocation;
- (SdkContractStatus* _Nullable)getContractStatus;
- (BOOL)getDone;
- (SdkContractDetailsList* _Nullable)getEgressContractDetails;
- (SdkContractStats* _Nullable)getEgressContractStats;
- (SdkContractDetailsList* _Nullable)getIngressContractDetails;
- (SdkContractStats* _Nullable)getIngressContractStats;
- (SdkId* _Nullable)getInstanceId;
- (SdkNetworkSpace* _Nullable)getNetworkSpace;
- (BOOL)getOffline;
- (BOOL)getProvideEnabled;
- (long)getProvideMode;
- (BOOL)getProvidePaused;
- (BOOL)getProvideWhileDisconnected;
- (BOOL)getProviderEnabled;
- (BOOL)getRemoteConnected;
- (BOOL)getRouteLocal;
- (NSString* _Nonnull)getRpcPublicKey;
- (BOOL)getShouldShowRatingDialog;
- (SdkDeviceStats* _Nullable)getStats;
- (BOOL)getTunnelStarted;
- (BOOL)getVpnInterfaceWhileOffline;
- (void)initProvideSecretKeys;
- (void)loadProvideSecretKeys:(SdkProvideSecretKeyList* _Nullable)provideSecretKeyList;
- (SdkAccountPreferencesViewController* _Nullable)openAccountPreferencesViewController;
- (SdkAccountViewController* _Nullable)openAccountViewController;
- (SdkConnectViewController* _Nullable)openConnectViewController;
- (SdkDevicesViewController* _Nullable)openDevicesViewController;
- (SdkFeedbackViewController* _Nullable)openFeedbackViewController;
- (SdkLocationsViewController* _Nullable)openLocationsViewController;
- (SdkNetworkUserViewController* _Nullable)openNetworkUserViewController;
- (SdkProvideViewController* _Nullable)openProvideViewController;
- (SdkReferralCodeViewController* _Nullable)openReferralCodeViewController;
- (SdkWalletViewController* _Nullable)openWalletViewController;
- (void)overrideBlockAction:(NSString* _Nullable)hostPattern block:(BOOL)block;
- (void)removeBlockActionOverride:(NSString* _Nullable)hostPattern;
- (void)removeDestination;
- (void)setBlockActionOverrideList:(SdkBlockActionOverrideList* _Nullable)blockActionOverrides;
- (void)setBlockEnabled:(BOOL)blockEnabled;
- (void)setBlockWhileDisconnected:(BOOL)blockWhileDisconnected;
- (void)setCanRefer:(BOOL)canRefer;
- (void)setCanShowRatingDialog:(BOOL)canShowRatingDialog;
- (void)setConnectLocation:(SdkConnectLocation* _Nullable)location;
- (void)setDestination:(SdkConnectLocation* _Nullable)location specs:(SdkProviderSpecList* _Nullable)specs provideMode:(long)provideMode;
- (void)setOffline:(BOOL)offline;
- (void)setProvideMode:(long)provideMode;
- (void)setProvidePaused:(BOOL)providePaused;
- (void)setProvideWhileDisconnected:(BOOL)provideWhileDisconnected;
- (void)setProviderEnabled:(BOOL)providerEnabled;
- (void)setRouteLocal:(BOOL)routeLocal;
- (void)setTunnelStarted:(BOOL)tunnelStarted;
- (void)setVpnInterfaceWhileOffline:(BOOL)vpnInterfaceWhileOffline;
- (void)shuffle;
/**
 * force a connect attempt as soon as possible
note this just speeds up connection but is not required,
since the rpc connect will poll until connected
 */
- (void)sync;
@end

@interface SdkDeviceRemoteAddress : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field DeviceRemoteAddress.Ip with unsupported type: net/netip.Addr

@property (nonatomic) long port;
- (NSString* _Nonnull)hostPort;
@end

@interface SdkDeviceRemoteConnectLocation : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkDeviceRemoteConnectLocationValue* _Nullable connectLocation;
@end

@interface SdkDeviceRemoteConnectLocationChangeEvent : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkDeviceRemoteConnectLocation* _Nullable location;
@end

@interface SdkDeviceRemoteConnectLocationId : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field DeviceRemoteConnectLocationId.ClientId with unsupported type: *github.com/urnetwork/connect/v2025.Id

// skipped field DeviceRemoteConnectLocationId.LocationId with unsupported type: *github.com/urnetwork/connect/v2025.Id

// skipped field DeviceRemoteConnectLocationId.LocationGroupId with unsupported type: *github.com/urnetwork/connect/v2025.Id

@property (nonatomic) BOOL bestAvailable;
@end

@interface SdkDeviceRemoteConnectLocationValue : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkDeviceRemoteConnectLocationId* _Nullable connectLocationId;
@property (nonatomic) NSString* _Nonnull name;
@property (nonatomic) int32_t providerCount;
@property (nonatomic) BOOL promoted;
@property (nonatomic) int32_t matchDistance;
@property (nonatomic) NSString* _Nonnull locationType;
@property (nonatomic) NSString* _Nonnull city;
@property (nonatomic) NSString* _Nonnull region;
@property (nonatomic) NSString* _Nonnull country;
@property (nonatomic) NSString* _Nonnull countryCode;
// skipped field DeviceRemoteConnectLocationValue.CityLocationId with unsupported type: *github.com/urnetwork/connect/v2025.Id

// skipped field DeviceRemoteConnectLocationValue.RegionLocationId with unsupported type: *github.com/urnetwork/connect/v2025.Id

// skipped field DeviceRemoteConnectLocationValue.CountryLocationId with unsupported type: *github.com/urnetwork/connect/v2025.Id

@end

@interface SdkDeviceRemoteContractStatus : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkContractStatus* _Nullable contractStatus;
@end

@interface SdkDeviceRemoteDestination : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkDeviceRemoteConnectLocation* _Nullable location;
// skipped field DeviceRemoteDestination.Specs with unsupported type: []*github.com/urnetwork/sdkbuilder/v2025.ProviderSpec

@property (nonatomic) long provideMode;
@end

@interface SdkDeviceRemoteHttpRequest : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field DeviceRemoteHttpRequest.RequestId with unsupported type: github.com/urnetwork/connect/v2025.Id

@property (nonatomic) NSString* _Nonnull requestUrl;
@property (nonatomic) NSData* _Nullable requestBodyBytes;
@property (nonatomic) NSString* _Nonnull byJwt;
@end

@interface SdkDeviceRemoteHttpResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field DeviceRemoteHttpResponse.RequestId with unsupported type: github.com/urnetwork/connect/v2025.Id

@property (nonatomic) NSData* _Nullable bodyBytes;
@property (nonatomic) SdkDeviceRemoteHttpResponseError* _Nullable error;
@end

@interface SdkDeviceRemoteHttpResponseError : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull error;
@end

@interface SdkDeviceRemoteOfflineChangeEvent : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) BOOL offline;
@property (nonatomic) BOOL vpnInterfaceWhileOffline;
@end

@interface SdkDeviceRemoteRpc : NSObject <goSeqRefInterface, SdkSub> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (void)close;
// skipped method DeviceRemoteRpc.ConnectChanged with unsupported parameter or return types

// skipped method DeviceRemoteRpc.ConnectLocationChanged with unsupported parameter or return types

// skipped method DeviceRemoteRpc.ContractStatusChanged with unsupported parameter or return types

// skipped method DeviceRemoteRpc.HttpResponse with unsupported parameter or return types

// skipped method DeviceRemoteRpc.OfflineChanged with unsupported parameter or return types

// skipped method DeviceRemoteRpc.ProvideChanged with unsupported parameter or return types

// skipped method DeviceRemoteRpc.ProvidePausedChanged with unsupported parameter or return types

// skipped method DeviceRemoteRpc.ProvideSecretKeysChanged with unsupported parameter or return types

// skipped method DeviceRemoteRpc.RouteLocalChanged with unsupported parameter or return types

// skipped method DeviceRemoteRpc.TunnelChanged with unsupported parameter or return types

// skipped method DeviceRemoteRpc.WindowMonitorEventCallback with unsupported parameter or return types

@end

@interface SdkDeviceRemoteState : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field DeviceRemoteState.CanShowRatingDialog with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[bool]

// skipped field DeviceRemoteState.ProvideWhileDisconnected with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[bool]

// skipped field DeviceRemoteState.CanRefer with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[bool]

// skipped field DeviceRemoteState.RouteLocal with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[bool]

// skipped field DeviceRemoteState.InitProvideSecretKeys with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[bool]

// skipped field DeviceRemoteState.LoadProvideSecretKeys with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[[]*github.com/urnetwork/sdkbuilder/v2025.ProvideSecretKey]

// skipped field DeviceRemoteState.ProvideMode with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[int]

// skipped field DeviceRemoteState.ProvidePaused with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[bool]

// skipped field DeviceRemoteState.Offline with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[bool]

// skipped field DeviceRemoteState.VpnInterfaceWhileOffline with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[bool]

// skipped field DeviceRemoteState.RemoveDestination with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[bool]

// skipped field DeviceRemoteState.Destination with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[*github.com/urnetwork/sdkbuilder/v2025.DeviceRemoteDestination]

// skipped field DeviceRemoteState.Location with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[*github.com/urnetwork/sdkbuilder/v2025.DeviceRemoteConnectLocation]

// skipped field DeviceRemoteState.Shuffle with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[bool]

// skipped field DeviceRemoteState.ResetEgressSecurityPolicyStats with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[bool]

// skipped field DeviceRemoteState.ResetIngressSecurityPolicyStats with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[bool]

// skipped field DeviceRemoteState.TunnelStarted with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[bool]

// skipped field DeviceRemoteState.ConnectEnabled with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[bool]

// skipped field DeviceRemoteState.ProvideEnabled with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[bool]

// skipped field DeviceRemoteState.EgressSecurityPolicyStats with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[map[github.com/urnetwork/connect/v2025.SecurityPolicyResult]map[github.com/urnetwork/connect/v2025.SecurityDestination]uint64]

// skipped field DeviceRemoteState.IngressSecurityPolicyStats with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[map[github.com/urnetwork/connect/v2025.SecurityPolicyResult]map[github.com/urnetwork/connect/v2025.SecurityDestination]uint64]

// skipped field DeviceRemoteState.ContractStatus with unsupported type: github.com/urnetwork/sdkbuilder/v2025.deviceRemoteValue[*github.com/urnetwork/sdkbuilder/v2025.ContractStatus]

- (void)merge:(SdkDeviceRemoteState* _Nullable)update;
- (void)unset;
@end

@interface SdkDeviceRemoteSyncRequest : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field DeviceRemoteSyncRequest.ProvideChangeListenerIds with unsupported type: []github.com/urnetwork/connect/v2025.Id

// skipped field DeviceRemoteSyncRequest.ProvidePausedChangeListenerIds with unsupported type: []github.com/urnetwork/connect/v2025.Id

// skipped field DeviceRemoteSyncRequest.OfflineChangeListenerIds with unsupported type: []github.com/urnetwork/connect/v2025.Id

// skipped field DeviceRemoteSyncRequest.ConnectChangeListenerIds with unsupported type: []github.com/urnetwork/connect/v2025.Id

// skipped field DeviceRemoteSyncRequest.RouteLocalChangeListenerIds with unsupported type: []github.com/urnetwork/connect/v2025.Id

// skipped field DeviceRemoteSyncRequest.ConnectLocationChangeListenerIds with unsupported type: []github.com/urnetwork/connect/v2025.Id

// skipped field DeviceRemoteSyncRequest.ProvideSecretKeysListenerIds with unsupported type: []github.com/urnetwork/connect/v2025.Id

// skipped field DeviceRemoteSyncRequest.TunnelChangeListenerIds with unsupported type: []github.com/urnetwork/connect/v2025.Id

// skipped field DeviceRemoteSyncRequest.ContractStatusChangeListenerIds with unsupported type: []github.com/urnetwork/connect/v2025.Id

// skipped field DeviceRemoteSyncRequest.WindowMonitorEventListenerIds with unsupported type: map[github.com/urnetwork/connect/v2025.Id][]github.com/urnetwork/connect/v2025.Id

// skipped field DeviceRemoteSyncRequest.State with unsupported type: github.com/urnetwork/sdkbuilder/v2025.DeviceRemoteState

@end

@interface SdkDeviceRemoteSyncResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * WindowIds map[connect.Id]bool
FIXME response cert
 */
@property (nonatomic) NSString* _Nonnull rpcPublicKey;
@property (nonatomic) NSString* _Nonnull error;
@end

@interface SdkDeviceRemoteWindowListenerId : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field DeviceRemoteWindowListenerId.WindowId with unsupported type: github.com/urnetwork/connect/v2025.Id

// skipped field DeviceRemoteWindowListenerId.ListenerId with unsupported type: github.com/urnetwork/connect/v2025.Id

@end

@interface SdkDeviceRemoteWindowMonitorEvent : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field DeviceRemoteWindowMonitorEvent.WindowIds with unsupported type: map[github.com/urnetwork/connect/v2025.Id]bool

// skipped field DeviceRemoteWindowMonitorEvent.WindowExpandEvent with unsupported type: *github.com/urnetwork/connect/v2025.WindowExpandEvent

// skipped field DeviceRemoteWindowMonitorEvent.ProviderEvents with unsupported type: map[github.com/urnetwork/connect/v2025.Id]*github.com/urnetwork/connect/v2025.ProviderEvent

@property (nonatomic) BOOL reset;
@end

@interface SdkDeviceStats : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (long)getConnectCount;
- (long)getMaxConnectDurationSeconds;
- (long)getNetConnectDurationSeconds;
- (int64_t)getNetRemoteReceiveByteCount;
- (int64_t)getNetRemoteSendByteCount;
- (BOOL)getUserSuccess;
- (void)updateConnect:(BOOL)connectEnabled;
- (void)updateRemoteReceive:(int64_t)remoteReceiveByteCount;
- (void)updateRemoteSend:(int64_t)remoteSendByteCount;
@end

@interface SdkDevicesViewController : NSObject <goSeqRefInterface, SdkSub, SdkViewController> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (id<SdkSub> _Nullable)addNetworkClientsListener:(id<SdkNetworkClientsListener> _Nullable)listener;
- (SdkId* _Nullable)clientId;
- (void)close;
- (void)start;
- (void)stop;
@end

@interface SdkExportNetworkSpace : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkNetworkSpaceKey* _Nullable key;
@property (nonatomic) SdkNetworkSpaceValues* _Nullable values;
@end

@interface SdkFeedbackSendArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkFeedbackSendNeeds* _Nullable needs;
@end

@interface SdkFeedbackSendNeeds : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull other;
@end

@interface SdkFeedbackSendResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@end

@interface SdkFeedbackViewController : NSObject <goSeqRefInterface, SdkSub, SdkViewController> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (id<SdkSub> _Nullable)addIsSendingFeedbackListener:(id<SdkIsSendingFeedbackListener> _Nullable)listener;
- (void)close;
- (void)sendFeedback:(NSString* _Nullable)msg;
- (void)start;
- (void)stop;
@end

@interface SdkFilteredLocations : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkConnectLocationList* _Nullable bestMatches;
@property (nonatomic) SdkConnectLocationList* _Nullable promoted;
@property (nonatomic) SdkConnectLocationList* _Nullable countries;
@property (nonatomic) SdkConnectLocationList* _Nullable cities;
@property (nonatomic) SdkConnectLocationList* _Nullable regions;
@property (nonatomic) SdkConnectLocationList* _Nullable devices;
@end

@interface SdkFindLocationsArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull query;
/**
 * the max search distance is `MaxDistanceFraction * len(Query)`
in other words `len(Query) * (1 - MaxDistanceFraction)` length the query must match
 */
@property (nonatomic) float maxDistanceFraction;
@property (nonatomic) BOOL enableMaxDistanceFraction;
@end

@interface SdkFindLocationsResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkProviderSpecList* _Nullable specs;
/**
 * this includes groups that show up in the location results
all `ProviderCount` are from inside the location results
groups are suggestions that can be used to broaden the search
 */
@property (nonatomic) SdkLocationGroupResultList* _Nullable groups;
/**
 * this includes all parent locations that show up in the location results
every `CityId`, `RegionId`, `CountryId` will have an entry
 */
@property (nonatomic) SdkLocationResultList* _Nullable locations;
@property (nonatomic) SdkLocationDeviceResultList* _Nullable devices;
@end

@interface SdkFindProviders2Args : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkProviderSpecList* _Nullable specs;
@property (nonatomic) long count;
@property (nonatomic) SdkIdList* _Nullable excludeClientIds;
@end

@interface SdkFindProviders2Result : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkFindProvidersProviderList* _Nullable providerStats;
@end

@interface SdkFindProvidersArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable locationId;
@property (nonatomic) SdkId* _Nullable locationGroupId;
@property (nonatomic) long count;
@property (nonatomic) SdkIdList* _Nullable excludeClientIds;
@end

@interface SdkFindProvidersProvider : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable clientId;
@property (nonatomic) long estimatedBytesPerSecond;
@end

@interface SdkFindProvidersProviderList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(SdkFindProvidersProvider* _Nullable)value;
- (BOOL)contains:(SdkFindProvidersProvider* _Nullable)v;
- (SdkFindProvidersProvider* _Nullable)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkFindProvidersResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkIdList* _Nullable clientIds;
@end

@interface SdkGetAccountWalletsResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkAccountWalletsList* _Nullable wallets;
@end

@interface SdkGetNetworkAccountPaymentsError : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull message;
@end

@interface SdkGetNetworkAccountPaymentsResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkAccountPaymentsList* _Nullable accountPayments;
@property (nonatomic) SdkGetNetworkAccountPaymentsError* _Nullable error;
@end

@interface SdkGetNetworkReferralCodeError : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull message;
@end

@interface SdkGetNetworkReferralCodeResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull referralCode;
@property (nonatomic) SdkGetNetworkReferralCodeError* _Nullable error;
@end

@interface SdkGetNetworkUserError : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull message;
@end

@interface SdkGetNetworkUserResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkNetworkUser* _Nullable networkUser;
@property (nonatomic) SdkGetNetworkUserError* _Nullable error;
@end

@interface SdkGetPayoutWalletIdResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable walletId;
@end

@interface SdkId : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
/**
 * store this on the object to support gomobile "equals" and "hashCode"
 */
@property (nonatomic) NSString* _Nonnull idStr;
- (NSData* _Nullable)bytes;
- (long)cmp:(SdkId* _Nullable)b;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)string;
- (BOOL)unmarshalJSON:(NSData* _Nullable)src error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkIdList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(SdkId* _Nullable)value;
- (BOOL)contains:(SdkId* _Nullable)v;
- (SdkId* _Nullable)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkIntList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(long)value;
- (BOOL)contains:(long)v;
- (long)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkLocalState : NSObject <goSeqRefInterface, SdkSub> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (void)close;
- (NSString* _Nonnull)getByClientJwt;
- (NSString* _Nonnull)getByJwt;
- (BOOL)getCanRefer;
- (BOOL)getCanShowRatingDialog;
- (SdkConnectLocation* _Nullable)getConnectLocation;
- (SdkId* _Nullable)getInstanceId;
- (long)getProvideMode;
- (SdkProvideSecretKeyList* _Nullable)getProvideSecretKeys;
- (BOOL)getProvideWhileDisconnected;
- (BOOL)getRouteLocal;
- (BOOL)getVpnInterfaceWhileOffline;
/**
 * clears all auth tokens
 */
- (BOOL)logout:(NSError* _Nullable* _Nullable)error;
- (SdkByJwt* _Nullable)parseByJwt:(NSError* _Nullable* _Nullable)error;
/**
 * if `byClientJwt` is set, sets a new `instanceId`; othewwise, clears `instanceId`
 */
- (BOOL)setByClientJwt:(NSString* _Nullable)byClientJwt error:(NSError* _Nullable* _Nullable)error;
/**
 * clears `byClientJwt` and `instanceId`
 */
- (BOOL)setByJwt:(NSString* _Nullable)byJwt error:(NSError* _Nullable* _Nullable)error;
- (BOOL)setCanRefer:(BOOL)canRefer error:(NSError* _Nullable* _Nullable)error;
- (BOOL)setCanShowRatingDialog:(BOOL)canShowRatingDialog error:(NSError* _Nullable* _Nullable)error;
- (BOOL)setConnectLocation:(SdkConnectLocation* _Nullable)connectLocation error:(NSError* _Nullable* _Nullable)error;
- (BOOL)setInstanceId:(SdkId* _Nullable)instanceId error:(NSError* _Nullable* _Nullable)error;
- (BOOL)setProvideMode:(long)provideMode error:(NSError* _Nullable* _Nullable)error;
- (BOOL)setProvideSecretKeys:(SdkProvideSecretKeyList* _Nullable)provideSecretKeyList error:(NSError* _Nullable* _Nullable)error;
- (BOOL)setProvideWhileDisconnected:(BOOL)provideWhileDisconnected error:(NSError* _Nullable* _Nullable)error;
- (BOOL)setRouteLocal:(BOOL)routeLocal error:(NSError* _Nullable* _Nullable)error;
- (BOOL)setVpnInterfaceWhileOffline:(BOOL)vpnInterfaceWhileOffline error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkLocationDeviceResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable clientId;
@property (nonatomic) NSString* _Nonnull deviceName;
@end

@interface SdkLocationDeviceResultList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(SdkLocationDeviceResult* _Nullable)value;
- (BOOL)contains:(SdkLocationDeviceResult* _Nullable)v;
- (SdkLocationDeviceResult* _Nullable)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkLocationGroupResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable locationGroupId;
@property (nonatomic) NSString* _Nonnull name;
@property (nonatomic) long providerCount;
@property (nonatomic) BOOL promoted;
@property (nonatomic) long matchDistance;
@end

@interface SdkLocationGroupResultList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(SdkLocationGroupResult* _Nullable)value;
- (BOOL)contains:(SdkLocationGroupResult* _Nullable)v;
- (SdkLocationGroupResult* _Nullable)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkLocationResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable locationId;
@property (nonatomic) NSString* _Nonnull locationType;
@property (nonatomic) NSString* _Nonnull name;
/**
 * FIXME
 */
@property (nonatomic) NSString* _Nonnull city;
/**
 * FIXME
 */
@property (nonatomic) NSString* _Nonnull region;
/**
 * FIXME
 */
@property (nonatomic) NSString* _Nonnull country;
@property (nonatomic) NSString* _Nonnull countryCode;
@property (nonatomic) SdkId* _Nullable cityLocationId;
@property (nonatomic) SdkId* _Nullable regionLocationId;
@property (nonatomic) SdkId* _Nullable countryLocationId;
@property (nonatomic) long providerCount;
@property (nonatomic) long matchDistance;
@end

@interface SdkLocationResultList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(SdkLocationResult* _Nullable)value;
- (BOOL)contains:(SdkLocationResult* _Nullable)v;
- (SdkLocationResult* _Nullable)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkLocationsViewController : NSObject <goSeqRefInterface, SdkSub, SdkViewController> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (id<SdkSub> _Nullable)addFilteredLocationsListener:(id<SdkFilteredLocationsListener> _Nullable)listener;
- (void)close;
- (void)filterLocations:(NSString* _Nullable)filter;
/**
 * *
 * Code is usually the country code which maps to a color hex.
 * If the location is not a country, we just need a unique string that represents the location
 * ie locationId.toString()
 */
- (NSString* _Nonnull)getColorHex:(NSString* _Nullable)code;
- (NSString* _Nonnull)getFilteredLocationState;
- (SdkFilteredLocations* _Nullable)getFilteredLocations;
- (void)start;
- (void)stop;
@end

@interface SdkLoginViewController : NSObject <goSeqRefInterface, SdkSub, SdkViewController> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init:(SdkApi* _Nullable)api;
- (void)close;
- (void)start;
- (void)stop;
@end

@interface SdkNetExtender : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull ip;
@property (nonatomic) NSString* _Nonnull secret;
@end

@interface SdkNetExtenderAutoConfigure : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull dnsIp;
@property (nonatomic) NSString* _Nonnull extenderHostname;
@end

@interface SdkNetworkCheckArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull networkName;
@end

@interface SdkNetworkCheckResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) BOOL available;
@end

@interface SdkNetworkClientConnection : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable clientId;
@property (nonatomic) SdkId* _Nullable connectionId;
@property (nonatomic) SdkTime* _Nullable connectTime;
@property (nonatomic) SdkTime* _Nullable disconnectTime;
@property (nonatomic) NSString* _Nonnull connectionHost;
@property (nonatomic) NSString* _Nonnull connectionService;
@property (nonatomic) NSString* _Nonnull connectionBlock;
@end

@interface SdkNetworkClientConnectionList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(SdkNetworkClientConnection* _Nullable)value;
- (BOOL)contains:(SdkNetworkClientConnection* _Nullable)v;
- (SdkNetworkClientConnection* _Nullable)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkNetworkClientInfo : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable clientId;
@property (nonatomic) SdkId* _Nullable networkId;
@property (nonatomic) NSString* _Nonnull description;
@property (nonatomic) NSString* _Nonnull deviceSpec;
@property (nonatomic) SdkTime* _Nullable createTime;
@property (nonatomic) SdkTime* _Nullable authTime;
@property (nonatomic) SdkNetworkClientResident* _Nullable resident;
@property (nonatomic) long provideMode;
@property (nonatomic) SdkNetworkClientConnectionList* _Nullable connections;
@end

@interface SdkNetworkClientInfoList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(SdkNetworkClientInfo* _Nullable)value;
- (BOOL)contains:(SdkNetworkClientInfo* _Nullable)v;
- (SdkNetworkClientInfo* _Nullable)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkNetworkClientResident : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable clientId;
@property (nonatomic) SdkId* _Nullable instanceId;
@property (nonatomic) SdkId* _Nullable residentId;
@property (nonatomic) NSString* _Nonnull residentHost;
@property (nonatomic) NSString* _Nonnull residentService;
@property (nonatomic) NSString* _Nonnull residentBlock;
@property (nonatomic) SdkIntList* _Nullable residentInternalPorts;
@end

@interface SdkNetworkClientsResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkNetworkClientInfoList* _Nullable clients;
@end

@interface SdkNetworkCreateArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull userName;
@property (nonatomic) NSString* _Nonnull userAuth;
@property (nonatomic) NSString* _Nonnull authJwt;
@property (nonatomic) NSString* _Nonnull authJwtType;
@property (nonatomic) NSString* _Nonnull password;
@property (nonatomic) NSString* _Nonnull networkName;
@property (nonatomic) BOOL terms;
@property (nonatomic) BOOL guestMode;
@property (nonatomic) BOOL verifyOtpNumeric;
@property (nonatomic) SdkId* _Nullable referralCode;
@end

@interface SdkNetworkCreateResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkNetworkCreateResultNetwork* _Nullable network;
@property (nonatomic) SdkNetworkCreateResultVerification* _Nullable verificationRequired;
@property (nonatomic) SdkNetworkCreateResultError* _Nullable error;
@end

@interface SdkNetworkCreateResultError : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull message;
@end

@interface SdkNetworkCreateResultNetwork : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull byJwt;
@property (nonatomic) NSString* _Nonnull networkName;
@end

@interface SdkNetworkCreateResultVerification : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull userAuth;
@end

@interface SdkNetworkDeleteResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@end

@interface SdkNetworkNameValidationViewController : NSObject <goSeqRefInterface, SdkSub, SdkViewController> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init:(SdkApi* _Nullable)api;
- (void)close;
- (void)networkCheck:(NSString* _Nullable)networkName callback:(id<SdkNetworkCheckCallback> _Nullable)callback;
- (void)start;
- (void)stop;
@end

@interface SdkNetworkSpace : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (NSString* _Nonnull)connectLinkUrl:(NSString* _Nullable)target;
- (SdkApi* _Nullable)getApi;
- (NSString* _Nonnull)getApiUrl;
- (SdkAsyncLocalState* _Nullable)getAsyncLocalState;
- (BOOL)getBundled;
- (NSString* _Nonnull)getEnvName;
- (NSString* _Nonnull)getEnvSecret;
- (NSString* _Nonnull)getHostName;
- (SdkNetworkSpaceKey* _Nullable)getKey;
- (NSString* _Nonnull)getLinkHostName;
- (NSString* _Nonnull)getMigrationHostName;
- (BOOL)getNetExposeServerHostNames;
- (BOOL)getNetExposeServerIps;
- (SdkNetExtender* _Nullable)getNetExtender;
- (SdkNetExtenderAutoConfigure* _Nullable)getNetExtenderAutoConfigure;
- (NSString* _Nonnull)getPlatformUrl;
- (BOOL)getSsoGoogle;
- (NSString* _Nonnull)getStore;
- (NSString* _Nonnull)getWallet;
- (NSString* _Nonnull)serviceUrl:(NSString* _Nullable)scheme service:(NSString* _Nullable)service;
- (NSString* _Nonnull)toJson:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkNetworkSpaceKey : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init:(NSString* _Nullable)hostName envName:(NSString* _Nullable)envName;
@property (nonatomic) NSString* _Nonnull hostName;
@property (nonatomic) NSString* _Nonnull envName;
@end

@interface SdkNetworkSpaceList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(SdkNetworkSpace* _Nullable)value;
- (BOOL)contains:(SdkNetworkSpace* _Nullable)v;
- (SdkNetworkSpace* _Nullable)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkNetworkSpaceManager : NSObject <goSeqRefInterface, SdkSub> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init:(NSString* _Nullable)storagePath;
- (nullable instancetype)initNoStorage;
- (id<SdkSub> _Nullable)addActiveNetworkSpaceChangeListener:(id<SdkActiveNetworkSpaceChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addNetworkSpacesChangeListener:(id<SdkNetworkSpacesChangeListener> _Nullable)listener;
- (void)close;
- (SdkNetworkSpace* _Nullable)getActiveNetworkSpace;
- (SdkNetworkSpace* _Nullable)getNetworkSpace:(SdkNetworkSpaceKey* _Nullable)key;
- (SdkNetworkSpaceList* _Nullable)getNetworkSpaces;
- (SdkNetworkSpace* _Nullable)importNetworkSpaceFromJson:(NSString* _Nullable)networkSpaceJson error:(NSError* _Nullable* _Nullable)error;
- (BOOL)removeNetworkSpace:(SdkNetworkSpace* _Nullable)networkSpace;
- (void)setActiveNetworkSpace:(SdkNetworkSpace* _Nullable)networkSpace;
- (SdkNetworkSpace* _Nullable)updateNetworkSpace:(SdkNetworkSpaceKey* _Nullable)key callback:(id<SdkNetworkSpaceUpdate> _Nullable)callback;
@end

@interface SdkNetworkSpaceValues : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull envSecret;
@property (nonatomic) BOOL bundled;
@property (nonatomic) BOOL netExposeServerIps;
@property (nonatomic) BOOL netExposeServerHostNames;
@property (nonatomic) NSString* _Nonnull linkHostName;
@property (nonatomic) NSString* _Nonnull migrationHostName;
@property (nonatomic) NSString* _Nonnull store;
@property (nonatomic) NSString* _Nonnull wallet;
@property (nonatomic) BOOL ssoGoogle;
/**
 * custom extender
this overrides any auto discovered extenders
 */
@property (nonatomic) SdkNetExtender* _Nullable netExtender;
@property (nonatomic) SdkNetExtenderAutoConfigure* _Nullable netExtenderAutoConfigure;
@end

@interface SdkNetworkUser : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable userId;
@property (nonatomic) NSString* _Nonnull userName;
@property (nonatomic) NSString* _Nonnull userAuth;
@property (nonatomic) BOOL verified;
@property (nonatomic) NSString* _Nonnull authType;
@property (nonatomic) NSString* _Nonnull networkName;
@end

@interface SdkNetworkUserUpdateArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull networkName;
@end

@interface SdkNetworkUserUpdateError : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull message;
@end

@interface SdkNetworkUserUpdateResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkNetworkUserUpdateError* _Nullable error;
@end

@interface SdkNetworkUserViewController : NSObject <goSeqRefInterface, SdkSub, SdkViewController> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (id<SdkSub> _Nullable)addIsLoadingListener:(id<SdkIsNetworkUserLoadingListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addIsUpdatingListener:(id<SdkIsNetworkUserUpdatingListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addNetworkUserListener:(id<SdkNetworkUserListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addNetworkUserUpdateErrorListener:(id<SdkNetworkUserUpdateErrorListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addNetworkUserUpdateSuccessListener:(id<SdkNetworkUserUpdateSuccessListener> _Nullable)listener;
- (void)close;
- (void)fetchNetworkUser;
- (SdkNetworkUser* _Nullable)getNetworkUser;
- (void)start;
- (void)stop;
- (void)updateNetworkUser:(NSString* _Nullable)networkName;
@end

@interface SdkProvideSecretKey : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long provideMode;
@property (nonatomic) NSString* _Nonnull provideSecretKey;
@end

@interface SdkProvideSecretKeyList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(SdkProvideSecretKey* _Nullable)value;
- (BOOL)contains:(SdkProvideSecretKey* _Nullable)v;
- (SdkProvideSecretKey* _Nullable)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkProvideViewController : NSObject <goSeqRefInterface, SdkSub, SdkViewController> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (void)close;
- (void)start;
- (void)stop;
@end

@interface SdkProviderGridPoint : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * note gomobile does not support struct composition
 */
@property (nonatomic) int32_t x;
@property (nonatomic) int32_t y;
@property (nonatomic) SdkId* _Nullable clientId;
/**
 * EventTime *Time
 */
@property (nonatomic) NSString* _Nonnull state;
/**
 * the time when this point will be removed
the ui can transition out based on this value
 */
@property (nonatomic) SdkTime* _Nullable endTime;
/**
 * wether the point is active for routing
 */
@property (nonatomic) BOOL active;
@end

@interface SdkProviderGridPointList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(SdkProviderGridPoint* _Nullable)value;
- (BOOL)contains:(SdkProviderGridPoint* _Nullable)v;
- (SdkProviderGridPoint* _Nullable)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkProviderSpec : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable locationId;
@property (nonatomic) SdkId* _Nullable locationGroupId;
@property (nonatomic) SdkId* _Nullable clientId;
@property (nonatomic) BOOL bestAvailable;
@end

@interface SdkProviderSpecList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(SdkProviderSpec* _Nullable)value;
- (BOOL)contains:(SdkProviderSpec* _Nullable)v;
- (SdkProviderSpec* _Nullable)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkReferralCodeViewController : NSObject <goSeqRefInterface, SdkSub, SdkViewController> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (id<SdkSub> _Nullable)addReferralCodeListener:(id<SdkReferralCodeListener> _Nullable)listener;
- (void)close;
- (void)start;
- (void)stop;
@end

@interface SdkRemoveWalletArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull walletId;
@end

@interface SdkRemoveWalletError : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull message;
@end

@interface SdkRemoveWalletResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) BOOL success;
@property (nonatomic) SdkRemoveWalletError* _Nullable error;
@end

@interface SdkSetPayoutWalletArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable walletId;
@end

@interface SdkSetPayoutWalletResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@end

@interface SdkStringList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(NSString* _Nullable)value;
- (BOOL)contains:(NSString* _Nullable)v;
- (NSString* _Nonnull)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkSubscription : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable subscriptionId;
@property (nonatomic) NSString* _Nonnull store;
@property (nonatomic) NSString* _Nonnull plan;
@end

@interface SdkSubscriptionBalanceResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int64_t balanceByteCount;
@property (nonatomic) SdkSubscription* _Nullable currentSubscription;
@property (nonatomic) SdkTransferBalanceList* _Nullable activeTransferBalances;
@property (nonatomic) int64_t pendingPayoutUsdNanoCents;
@property (nonatomic) SdkCircleWalletInfo* _Nullable walletInfo;
@property (nonatomic) NSString* _Nonnull updateTime;
@end

@interface SdkSubscriptionCreatePaymentIdArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@end

@interface SdkSubscriptionCreatePaymentIdError : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull message;
@end

@interface SdkSubscriptionCreatePaymentIdResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable subscriptionPaymentId;
@property (nonatomic) SdkSubscriptionCreatePaymentIdError* _Nullable error;
@end

/**
 * conforms to `json.Marshaler` and `json.Unmarshaler`
 */
@interface SdkTime : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)initUnixMilli:(int64_t)unixMilli;
/**
 * store this on the object to support gomobile "equals" and "hashCode"
 */
@property (nonatomic) NSString* _Nonnull timeStr;
- (long)cmp:(SdkTime* _Nullable)b;
- (NSString* _Nonnull)format:(NSString* _Nullable)layout;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (int32_t)millisUntil;
- (NSString* _Nonnull)string;
- (int64_t)unixMilli;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkTransferBalance : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable balanceId;
@property (nonatomic) SdkId* _Nullable networkId;
@property (nonatomic) NSString* _Nonnull startTime;
@property (nonatomic) NSString* _Nonnull endTime;
@property (nonatomic) int64_t startBalanceByteCount;
/**
 * how much money the platform made after subtracting fees
 */
@property (nonatomic) int64_t netRevenue;
@property (nonatomic) int64_t balanceByteCount;
@end

@interface SdkTransferBalanceList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(SdkTransferBalance* _Nullable)value;
- (BOOL)contains:(SdkTransferBalance* _Nullable)v;
- (SdkTransferBalance* _Nullable)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkTransferPath : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init:(SdkId* _Nullable)sourceId destinationId:(SdkId* _Nullable)destinationId streamId:(SdkId* _Nullable)streamId;
@property (nonatomic) SdkId* _Nullable sourceId;
@property (nonatomic) SdkId* _Nullable destinationId;
@property (nonatomic) SdkId* _Nullable streamId;
@end

@interface SdkTransferPathList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)add:(SdkTransferPath* _Nullable)value;
- (BOOL)contains:(SdkTransferPath* _Nullable)v;
- (SdkTransferPath* _Nullable)get:(long)i;
- (long)len;
- (NSData* _Nullable)marshalJSON:(NSError* _Nullable* _Nullable)error;
- (BOOL)unmarshalJSON:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface SdkTransferStatsResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int64_t paidBytesProvided;
@property (nonatomic) int64_t unpaidBytesProvided;
@end

@interface SdkTunnel : NSObject <goSeqRefInterface, SdkSub> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init;
- (void)cancel;
- (void)close;
- (BOOL)getDone;
@end

@interface SdkUpgradeGuestArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull userAuth;
@property (nonatomic) NSString* _Nonnull authJwt;
@property (nonatomic) NSString* _Nonnull authJwtType;
@property (nonatomic) NSString* _Nonnull password;
@property (nonatomic) NSString* _Nonnull networkName;
@end

@interface SdkUpgradeGuestExistingArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull userAuth;
@property (nonatomic) NSString* _Nonnull password;
@property (nonatomic) NSString* _Nonnull authJwt;
@property (nonatomic) NSString* _Nonnull authJwtType;
@end

@interface SdkUpgradeGuestExistingNetwork : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull byJwt;
@end

@interface SdkUpgradeGuestExistingResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkUpgradeGuestExistingNetwork* _Nullable network;
@property (nonatomic) SdkUpgradeGuestExistingResultVerification* _Nullable verificationRequired;
@property (nonatomic) SdkUpgradeGuesteExistingResultError* _Nullable error;
@end

@interface SdkUpgradeGuestExistingResultVerification : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull userAuth;
@end

@interface SdkUpgradeGuestNetwork : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull byJwt;
@end

@interface SdkUpgradeGuestResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkUpgradeGuestNetwork* _Nullable network;
@property (nonatomic) SdkUpgradeGuestResultVerification* _Nullable verificationRequired;
@property (nonatomic) SdkUpgradeGuesteResultError* _Nullable error;
@end

@interface SdkUpgradeGuestResultVerification : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull userAuth;
@end

@interface SdkUpgradeGuesteExistingResultError : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull message;
@end

@interface SdkUpgradeGuesteResultError : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull message;
@end

@interface SdkValidateReferralCodeArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkId* _Nullable referralCode;
@end

@interface SdkValidateReferralCodeResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) BOOL isValid;
@end

@interface SdkWalletBalanceResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkCircleWalletInfo* _Nullable walletInfo;
@end

@interface SdkWalletCircleInitError : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull message;
@end

@interface SdkWalletCircleInitResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkCircleUserToken* _Nullable userToken;
@property (nonatomic) NSString* _Nonnull challengeId;
@property (nonatomic) SdkWalletCircleInitError* _Nullable error;
@end

@interface SdkWalletCircleTransferOutArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull toAddress;
@property (nonatomic) int64_t amountUsdcNanoCents;
@property (nonatomic) BOOL terms;
@end

@interface SdkWalletCircleTransferOutError : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull message;
@end

@interface SdkWalletCircleTransferOutResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SdkCircleUserToken* _Nullable userToken;
@property (nonatomic) NSString* _Nonnull challengeId;
@property (nonatomic) SdkWalletCircleTransferOutError* _Nullable error;
@end

@interface SdkWalletValidateAddressArgs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull address;
@property (nonatomic) NSString* _Nonnull chain;
@end

@interface SdkWalletValidateAddressResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) BOOL valid;
@end

@interface SdkWalletViewController : NSObject <goSeqRefInterface, SdkSub, SdkViewController> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (id<SdkSub> _Nullable)addAccountWalletsListener:(id<SdkAccountWalletsListener> _Nullable)listener;
- (void)addExternalWallet:(NSString* _Nullable)address blockchain:(NSString* _Nullable)blockchain;
- (id<SdkSub> _Nullable)addIsCreatingExternalWalletListener:(id<SdkIsCreatingExternalWalletListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addIsRemovingWalletListener:(id<SdkIsRemovingWalletListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addPaymentsListener:(id<SdkPaymentsListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addPayoutWalletListener:(id<SdkPayoutWalletListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addUnpaidByteCountListener:(id<SdkUnpaidByteCountListener> _Nullable)listener;
- (void)close;
- (void)fetchPayments;
- (void)fetchPayoutWallet;
/**
 * *
 * Sum of paid and unpaid bytes provided
 *
 */
- (void)fetchTransferStats;
- (SdkAccountWallet* _Nullable)filterWalletsById:(NSString* _Nullable)idStr;
- (SdkAccountPaymentsList* _Nullable)getAccountPayments;
- (NSString* _Nonnull)getNextPayoutDate;
- (SdkId* _Nullable)getPayoutWalletId;
- (int64_t)getUnpaidByteCount;
- (SdkAccountWalletsList* _Nullable)getWallets;
- (void)removeWallet:(SdkId* _Nullable)walletId;
- (void)setIsPollingAccountWallets:(BOOL)isPolling;
- (void)setIsPollingPayoutWallet:(BOOL)isPolling;
- (void)start;
- (void)stop;
- (BOOL)updatePayoutWallet:(SdkId* _Nullable)walletId error:(NSError* _Nullable* _Nullable)error;
- (void)validateAddress:(NSString* _Nullable)address blockchain:(NSString* _Nullable)blockchain callback:(id<SdkValidateAddressCallback> _Nullable)callback;
@end

FOUNDATION_EXPORT const int64_t SdkAsyncQueueSize;
FOUNDATION_EXPORT NSString* _Nonnull const SdkConnected;
FOUNDATION_EXPORT NSString* _Nonnull const SdkConnecting;
FOUNDATION_EXPORT NSString* _Nonnull const SdkDestinationSet;
FOUNDATION_EXPORT NSString* _Nonnull const SdkDisconnected;
FOUNDATION_EXPORT const long SdkIpProtocolTcp;
FOUNDATION_EXPORT const long SdkIpProtocolUdp;
FOUNDATION_EXPORT const long SdkIpProtocolUnkown;
FOUNDATION_EXPORT const int64_t SdkLocalStorageFilePermissions;
FOUNDATION_EXPORT NSString* _Nonnull const SdkLocationTypeCity;
FOUNDATION_EXPORT NSString* _Nonnull const SdkLocationTypeCountry;
FOUNDATION_EXPORT NSString* _Nonnull const SdkLocationTypeRegion;
FOUNDATION_EXPORT NSString* _Nonnull const SdkLocationsError;
FOUNDATION_EXPORT NSString* _Nonnull const SdkLocationsLoaded;
FOUNDATION_EXPORT NSString* _Nonnull const SdkLocationsLoading;
FOUNDATION_EXPORT NSString* _Nonnull const SdkMATIC;
FOUNDATION_EXPORT const long SdkProvideModeFriendsAndFamily;
FOUNDATION_EXPORT const long SdkProvideModeNetwork;
FOUNDATION_EXPORT const long SdkProvideModeNone;
FOUNDATION_EXPORT const long SdkProvideModePublic;
FOUNDATION_EXPORT const long SdkProvideModeStream;
FOUNDATION_EXPORT NSString* _Nonnull const SdkProviderStateAdded;
FOUNDATION_EXPORT NSString* _Nonnull const SdkProviderStateEvaluationFailed;
FOUNDATION_EXPORT NSString* _Nonnull const SdkProviderStateInEvaluation;
FOUNDATION_EXPORT NSString* _Nonnull const SdkProviderStateNotAdded;
FOUNDATION_EXPORT NSString* _Nonnull const SdkProviderStateRemoved;
FOUNDATION_EXPORT NSString* _Nonnull const SdkSOL;
FOUNDATION_EXPORT NSString* _Nonnull const SdkWalletTypeCircleUserControlled;
FOUNDATION_EXPORT NSString* _Nonnull const SdkWalletTypeSol;
FOUNDATION_EXPORT NSString* _Nonnull const SdkWalletTypeXch;

@interface Sdk : NSObject
/**
 * this value is set via the linker, e.g.
-ldflags "-X client.Version=$WARP_VERSION"
 */
+ (NSString* _Nonnull) version;
+ (void) setVersion:(NSString* _Nonnull)v;

@end

FOUNDATION_EXPORT NSString* _Nonnull SdkConnectLinkUrl(SdkNetworkSpaceKey* _Nullable key, SdkNetworkSpaceValues* _Nullable values, NSString* _Nullable target);

FOUNDATION_EXPORT NSData* _Nullable SdkDecodeBase58(NSString* _Nullable data, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable SdkDecryptData(NSString* _Nullable encryptedDataBase58, NSString* _Nullable nonceBase58, NSString* _Nullable sharedSecretBase58, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull SdkEncodeBase58(NSData* _Nullable data);

FOUNDATION_EXPORT void SdkFreeMemory(void);

FOUNDATION_EXPORT NSData* _Nullable SdkGenerateSharedSecret(NSData* _Nullable privateKey, NSData* _Nullable publicKey, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull SdkGetColorHex(NSString* _Nullable code);

FOUNDATION_EXPORT SdkFilteredLocations* _Nullable SdkGetFilteredLocationsFromResult(SdkFindLocationsResult* _Nullable result, NSString* _Nullable filter);

FOUNDATION_EXPORT double SdkNanoCentsToUsd(int64_t nanoCents);

FOUNDATION_EXPORT SdkAccountPaymentsList* _Nullable SdkNewAccountPaymentsList(void);

FOUNDATION_EXPORT SdkAccountWalletsList* _Nullable SdkNewAccountWalletsList(void);

FOUNDATION_EXPORT SdkAsyncLocalState* _Nullable SdkNewAsyncLocalState(NSString* _Nullable localStorageHome);

FOUNDATION_EXPORT SdkBlockActionList* _Nullable SdkNewBlockActionList(void);

FOUNDATION_EXPORT SdkBlockActionOverrideList* _Nullable SdkNewBlockActionOverrideList(void);

FOUNDATION_EXPORT SdkConnectLocationList* _Nullable SdkNewConnectLocationList(void);

FOUNDATION_EXPORT SdkContractDetailsList* _Nullable SdkNewContractDetailsList(void);

FOUNDATION_EXPORT SdkDeviceLocal* _Nullable SdkNewDeviceLocalWithDefaults(SdkNetworkSpace* _Nullable networkSpace, NSString* _Nullable byJwt, NSString* _Nullable deviceDescription, NSString* _Nullable deviceSpec, NSString* _Nullable appVersion, SdkId* _Nullable instanceId, BOOL enableRpc, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT SdkDeviceRemote* _Nullable SdkNewDeviceRemoteWithDefaults(SdkNetworkSpace* _Nullable networkSpace, NSString* _Nullable byJwt, SdkId* _Nullable instanceId, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT SdkFindProvidersProviderList* _Nullable SdkNewFindProvidersProviderList(void);

FOUNDATION_EXPORT SdkId* _Nullable SdkNewId(void);

FOUNDATION_EXPORT SdkIdList* _Nullable SdkNewIdList(void);

FOUNDATION_EXPORT SdkIntList* _Nullable SdkNewIntList(void);

FOUNDATION_EXPORT SdkLocationDeviceResultList* _Nullable SdkNewLocationDeviceResultList(void);

FOUNDATION_EXPORT SdkLocationGroupResultList* _Nullable SdkNewLocationGroupResultList(void);

FOUNDATION_EXPORT SdkLocationResultList* _Nullable SdkNewLocationResultList(void);

FOUNDATION_EXPORT SdkLoginViewController* _Nullable SdkNewLoginViewController(SdkApi* _Nullable api);

FOUNDATION_EXPORT SdkNetworkClientConnectionList* _Nullable SdkNewNetworkClientConnectionList(void);

FOUNDATION_EXPORT SdkNetworkClientInfoList* _Nullable SdkNewNetworkClientInfoList(void);

FOUNDATION_EXPORT SdkNetworkNameValidationViewController* _Nullable SdkNewNetworkNameValidationViewController(SdkApi* _Nullable api);

FOUNDATION_EXPORT SdkNetworkSpaceKey* _Nullable SdkNewNetworkSpaceKey(NSString* _Nullable hostName, NSString* _Nullable envName);

FOUNDATION_EXPORT SdkNetworkSpaceList* _Nullable SdkNewNetworkSpaceList(void);

FOUNDATION_EXPORT SdkNetworkSpaceManager* _Nullable SdkNewNetworkSpaceManager(NSString* _Nullable storagePath);

FOUNDATION_EXPORT SdkNetworkSpaceManager* _Nullable SdkNewNetworkSpaceManagerNoStorage(void);

FOUNDATION_EXPORT SdkProvideSecretKeyList* _Nullable SdkNewProvideSecretKeyList(void);

FOUNDATION_EXPORT SdkProviderGridPointList* _Nullable SdkNewProviderGridPointList(void);

FOUNDATION_EXPORT SdkProviderSpecList* _Nullable SdkNewProviderSpecList(void);

FOUNDATION_EXPORT SdkStringList* _Nullable SdkNewStringList(void);

FOUNDATION_EXPORT SdkTime* _Nullable SdkNewTimeUnixMilli(int64_t unixMilli);

FOUNDATION_EXPORT SdkTransferBalanceList* _Nullable SdkNewTransferBalanceList(void);

FOUNDATION_EXPORT SdkTransferPath* _Nullable SdkNewTransferPath(SdkId* _Nullable sourceId, SdkId* _Nullable destinationId, SdkId* _Nullable streamId);

FOUNDATION_EXPORT SdkTransferPathList* _Nullable SdkNewTransferPathList(void);

FOUNDATION_EXPORT SdkTunnel* _Nullable SdkNewTunnel(void);

FOUNDATION_EXPORT NSString* _Nonnull SdkNormalEnvName(NSString* _Nullable envName);

FOUNDATION_EXPORT SdkId* _Nullable SdkParseId(NSString* _Nullable src, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull SdkServiceUrl(SdkNetworkSpaceKey* _Nullable key, SdkNetworkSpaceValues* _Nullable values, NSString* _Nullable scheme, NSString* _Nullable service);

FOUNDATION_EXPORT void SdkSetMemoryLimit(int64_t limit);

FOUNDATION_EXPORT int64_t SdkUsdToNanoCents(double usd);

@class SdkAccountPreferencesGetCallback;

@class SdkAccountPreferencesSetCallback;

@class SdkAccountWalletsListener;

@class SdkActiveNetworkSpaceChangeListener;

@class SdkAllowProductUpdatesListener;

@class SdkAuthCodeLoginCallback;

@class SdkAuthLoginCallback;

@class SdkAuthLoginWithPasswordCallback;

@class SdkAuthNetworkClientCallback;

@class SdkAuthPasswordResetCallback;

@class SdkAuthVerifyCallback;

@class SdkAuthVerifySendCallback;

@class SdkBlockActionWindowChangeListener;

@class SdkBlockChangeListener;

@class SdkBlockStatsChangeListener;

@class SdkCommitCallback;

@class SdkConnectChangeListener;

@class SdkConnectLocationChangeListener;

@class SdkConnectionStatusListener;

@class SdkContractDetailsChangeListener;

@class SdkContractStatsChangeListener;

@class SdkContractStatusChangeListener;

@class SdkCreateAccountWalletCallback;

@class SdkDevice;

@class SdkFilteredLocationsListener;

@class SdkFindLocationsCallback;

@class SdkFindProviders2Callback;

@class SdkFindProvidersCallback;

@class SdkGetAccountPaymentsCallback;

@class SdkGetAccountWalletsCallback;

@class SdkGetByClientJwtCallback;

@class SdkGetByJwtCallback;

@class SdkGetInstanceIdCallback;

@class SdkGetNetworkClientsCallback;

@class SdkGetNetworkReferralCodeCallback;

@class SdkGetNetworkUserCallback;

@class SdkGetPayoutWalletCallback;

@class SdkGetTransferStatsCallback;

@class SdkGridListener;

@class SdkIsCreatingExternalWalletListener;

@class SdkIsNetworkUserLoadingListener;

@class SdkIsNetworkUserUpdatingListener;

@class SdkIsRemovingWalletListener;

@class SdkIsSendingFeedbackListener;

@class SdkNetworkCheckCallback;

@class SdkNetworkClientsListener;

@class SdkNetworkCreateCallback;

@class SdkNetworkDeleteCallback;

@class SdkNetworkSpaceUpdate;

@class SdkNetworkSpacesChangeListener;

@class SdkNetworkUserListener;

@class SdkNetworkUserUpdateCallback;

@class SdkNetworkUserUpdateErrorListener;

@class SdkNetworkUserUpdateSuccessListener;

@class SdkOfflineChangeListener;

@class SdkParseByJwtCallback;

@class SdkPaymentsListener;

@class SdkPayoutWalletListener;

@class SdkProvideChangeListener;

@class SdkProvidePausedChangeListener;

@class SdkProvideSecretKeysListener;

@class SdkProviderChangeListener;

@class SdkReceivePacket;

@class SdkReferralCodeListener;

@class SdkRemoteChangeListener;

@class SdkRemoveWalletCallback;

@class SdkRouteLocalChangeListener;

@class SdkSelectedLocationListener;

@class SdkSendFeedbackCallback;

@class SdkSetPayoutWalletCallback;

@class SdkSub;

@class SdkSubscriptionBalanceCallback;

@class SdkSubscriptionCreatePaymentIdCallback;

@class SdkTunnelChangeListener;

@class SdkUnpaidByteCountListener;

@class SdkUpgradeGuestCallback;

@class SdkUpgradeGuestExistingCallback;

@class SdkValidateAddressCallback;

@class SdkValidateReferralCodeCallback;

@class SdkViewController;

@class SdkViewControllerManager;

@class SdkWalletBalanceCallback;

@class SdkWalletCircleInitCallback;

@class SdkWalletCircleTransferOutCallback;

@class SdkWalletValidateAddressCallback;

@interface SdkAccountPreferencesGetCallback : NSObject <goSeqRefInterface, SdkAccountPreferencesGetCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkAccountPreferencesGetResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkAccountPreferencesSetCallback : NSObject <goSeqRefInterface, SdkAccountPreferencesSetCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkAccountPreferencesSetResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkAccountWalletsListener : NSObject <goSeqRefInterface, SdkAccountWalletsListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)accountWalletsChanged;
@end

@interface SdkActiveNetworkSpaceChangeListener : NSObject <goSeqRefInterface, SdkActiveNetworkSpaceChangeListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)activeNetworkSpaceChanged:(SdkNetworkSpace* _Nullable)networkSpace;
@end

@interface SdkAllowProductUpdatesListener : NSObject <goSeqRefInterface, SdkAllowProductUpdatesListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)stateChanged:(BOOL)p0;
@end

@interface SdkAuthCodeLoginCallback : NSObject <goSeqRefInterface, SdkAuthCodeLoginCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkAuthCodeLoginResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkAuthLoginCallback : NSObject <goSeqRefInterface, SdkAuthLoginCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkAuthLoginResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkAuthLoginWithPasswordCallback : NSObject <goSeqRefInterface, SdkAuthLoginWithPasswordCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkAuthLoginWithPasswordResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkAuthNetworkClientCallback : NSObject <goSeqRefInterface, SdkAuthNetworkClientCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkAuthNetworkClientResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkAuthPasswordResetCallback : NSObject <goSeqRefInterface, SdkAuthPasswordResetCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkAuthPasswordResetResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkAuthVerifyCallback : NSObject <goSeqRefInterface, SdkAuthVerifyCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkAuthVerifyResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkAuthVerifySendCallback : NSObject <goSeqRefInterface, SdkAuthVerifySendCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkAuthVerifySendResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkBlockActionWindowChangeListener : NSObject <goSeqRefInterface, SdkBlockActionWindowChangeListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)blockActionWindowChanged:(SdkBlockActionWindow* _Nullable)blockActionWindow;
@end

@interface SdkBlockChangeListener : NSObject <goSeqRefInterface, SdkBlockChangeListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)blockChanged:(BOOL)blockEnabled;
@end

@interface SdkBlockStatsChangeListener : NSObject <goSeqRefInterface, SdkBlockStatsChangeListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)blockStatsChanged:(SdkBlockStats* _Nullable)blockStats;
@end

@interface SdkCommitCallback : NSObject <goSeqRefInterface, SdkCommitCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)complete:(BOOL)success;
@end

@interface SdkConnectChangeListener : NSObject <goSeqRefInterface, SdkConnectChangeListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)connectChanged:(BOOL)connectEnabled;
@end

@interface SdkConnectLocationChangeListener : NSObject <goSeqRefInterface, SdkConnectLocationChangeListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)connectLocationChanged:(SdkConnectLocation* _Nullable)location;
@end

@interface SdkConnectionStatusListener : NSObject <goSeqRefInterface, SdkConnectionStatusListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)connectionStatusChanged;
@end

@interface SdkContractDetailsChangeListener : NSObject <goSeqRefInterface, SdkContractDetailsChangeListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)contractDetailsChanged:(SdkContractDetails* _Nullable)contractDetails;
@end

@interface SdkContractStatsChangeListener : NSObject <goSeqRefInterface, SdkContractStatsChangeListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)contractStatsChanged:(SdkContractStats* _Nullable)contractStats;
@end

@interface SdkContractStatusChangeListener : NSObject <goSeqRefInterface, SdkContractStatusChangeListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)contractStatusChanged:(SdkContractStatus* _Nullable)contractStatus;
@end

@interface SdkCreateAccountWalletCallback : NSObject <goSeqRefInterface, SdkCreateAccountWalletCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkCreateAccountWalletResult* _Nullable)result err:(NSError* _Nullable)err;
@end

/**
 * every device must also support the unexported `device` interface
 */
@interface SdkDevice : NSObject <goSeqRefInterface, SdkDevice> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * rate limited window updates
 */
- (id<SdkSub> _Nullable)addBlockActionWindowChangeListener:(id<SdkBlockActionWindowChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addBlockChangeListener:(id<SdkBlockChangeListener> _Nullable)listener;
/**
 * rate limited
 */
- (id<SdkSub> _Nullable)addBlockStatsChangeListener:(id<SdkBlockStatsChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addConnectChangeListener:(id<SdkConnectChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addConnectLocationChangeListener:(id<SdkConnectLocationChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addContractStatusChangeListener:(id<SdkContractStatusChangeListener> _Nullable)listener;
/**
 * rate limited
 */
- (id<SdkSub> _Nullable)addEgressContractDetailsChangeListener:(id<SdkContractDetailsChangeListener> _Nullable)listener;
/**
 * rate limited
 */
- (id<SdkSub> _Nullable)addEgressContratStatsChangeListener:(id<SdkContractStatsChangeListener> _Nullable)listener;
/**
 * rate limited
 */
- (id<SdkSub> _Nullable)addIngressContractDetailsChangeListener:(id<SdkContractDetailsChangeListener> _Nullable)listener;
/**
 * rate limited
 */
- (id<SdkSub> _Nullable)addIngressContratStatsChangeListener:(id<SdkContractStatsChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addOfflineChangeListener:(id<SdkOfflineChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addProvideChangeListener:(id<SdkProvideChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addProvidePausedChangeListener:(id<SdkProvidePausedChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addProvideSecretKeysListener:(id<SdkProvideSecretKeysListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addProviderChangeListener:(id<SdkProviderChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addRouteLocalChangeListener:(id<SdkRouteLocalChangeListener> _Nullable)listener;
- (id<SdkSub> _Nullable)addTunnelChangeListener:(id<SdkTunnelChangeListener> _Nullable)listener;
- (void)cancel;
- (void)close;
- (SdkApi* _Nullable)getApi;
/**
 * includes applicable overrides
 */
- (SdkBlockActionWindow* _Nullable)getBlockActions;
- (BOOL)getBlockEnabled;
- (SdkBlockStats* _Nullable)getBlockStats;
- (BOOL)getBlockWhileDisconnected;
- (BOOL)getCanRefer;
- (BOOL)getCanShowRatingDialog;
- (SdkId* _Nullable)getClientId;
- (BOOL)getConnectEnabled;
- (SdkConnectLocation* _Nullable)getConnectLocation;
- (SdkContractStatus* _Nullable)getContractStatus;
- (BOOL)getDone;
- (SdkContractDetailsList* _Nullable)getEgressContractDetails;
- (SdkContractStats* _Nullable)getEgressContractStats;
- (SdkContractDetailsList* _Nullable)getIngressContractDetails;
- (SdkContractStats* _Nullable)getIngressContractStats;
- (SdkId* _Nullable)getInstanceId;
- (SdkNetworkSpace* _Nullable)getNetworkSpace;
- (BOOL)getOffline;
- (BOOL)getProvideEnabled;
- (long)getProvideMode;
- (BOOL)getProvidePaused;
- (BOOL)getProvideWhileDisconnected;
- (BOOL)getProviderEnabled;
- (BOOL)getRouteLocal;
- (BOOL)getShouldShowRatingDialog;
- (SdkDeviceStats* _Nullable)getStats;
- (BOOL)getTunnelStarted;
- (BOOL)getVpnInterfaceWhileOffline;
- (void)initProvideSecretKeys;
- (void)loadProvideSecretKeys:(SdkProvideSecretKeyList* _Nullable)provideSecretKeyList;
/**
 * host can be *.H, **.H (includes H and any subdomain), or a regex s/H/
 */
- (void)overrideBlockAction:(NSString* _Nullable)hostPattern block:(BOOL)block;
/**
 * exact match of the host pattern
 */
- (void)removeBlockActionOverride:(NSString* _Nullable)hostPattern;
- (void)removeDestination;
- (void)setBlockActionOverrideList:(SdkBlockActionOverrideList* _Nullable)blockActionOverrides;
- (void)setBlockEnabled:(BOOL)blockEnabled;
- (void)setBlockWhileDisconnected:(BOOL)blockWhileDisconnected;
- (void)setCanRefer:(BOOL)canRefer;
- (void)setCanShowRatingDialog:(BOOL)canShowRatingDialog;
- (void)setConnectLocation:(SdkConnectLocation* _Nullable)location;
- (void)setDestination:(SdkConnectLocation* _Nullable)location specs:(SdkProviderSpecList* _Nullable)specs provideMode:(long)provideMode;
- (void)setOffline:(BOOL)offline;
- (void)setProvideMode:(long)provideMode;
- (void)setProvidePaused:(BOOL)providePaused;
- (void)setProvideWhileDisconnected:(BOOL)provideWhileDisconnected;
- (void)setProviderEnabled:(BOOL)providerEnabled;
- (void)setRouteLocal:(BOOL)routeLocal;
- (void)setTunnelStarted:(BOOL)tunnelStarted;
- (void)setVpnInterfaceWhileOffline:(BOOL)vpnInterfaceWhileOffline;
- (void)shuffle;
@end

@interface SdkFilteredLocationsListener : NSObject <goSeqRefInterface, SdkFilteredLocationsListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)filteredLocationsChanged:(SdkFilteredLocations* _Nullable)locations state:(NSString* _Nullable)state;
@end

@interface SdkFindLocationsCallback : NSObject <goSeqRefInterface, SdkFindLocationsCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkFindLocationsResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkFindProviders2Callback : NSObject <goSeqRefInterface, SdkFindProviders2Callback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkFindProviders2Result* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkFindProvidersCallback : NSObject <goSeqRefInterface, SdkFindProvidersCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkFindProvidersResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkGetAccountPaymentsCallback : NSObject <goSeqRefInterface, SdkGetAccountPaymentsCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkGetNetworkAccountPaymentsResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkGetAccountWalletsCallback : NSObject <goSeqRefInterface, SdkGetAccountWalletsCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkGetAccountWalletsResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkGetByClientJwtCallback : NSObject <goSeqRefInterface, SdkGetByClientJwtCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(NSString* _Nullable)result ok:(BOOL)ok;
@end

@interface SdkGetByJwtCallback : NSObject <goSeqRefInterface, SdkGetByJwtCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(NSString* _Nullable)result ok:(BOOL)ok;
@end

@interface SdkGetInstanceIdCallback : NSObject <goSeqRefInterface, SdkGetInstanceIdCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkId* _Nullable)result ok:(BOOL)ok;
@end

@interface SdkGetNetworkClientsCallback : NSObject <goSeqRefInterface, SdkGetNetworkClientsCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkNetworkClientsResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkGetNetworkReferralCodeCallback : NSObject <goSeqRefInterface, SdkGetNetworkReferralCodeCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkGetNetworkReferralCodeResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkGetNetworkUserCallback : NSObject <goSeqRefInterface, SdkGetNetworkUserCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkGetNetworkUserResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkGetPayoutWalletCallback : NSObject <goSeqRefInterface, SdkGetPayoutWalletCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkGetPayoutWalletIdResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkGetTransferStatsCallback : NSObject <goSeqRefInterface, SdkGetTransferStatsCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkTransferStatsResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkGridListener : NSObject <goSeqRefInterface, SdkGridListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)gridChanged;
@end

@interface SdkIsCreatingExternalWalletListener : NSObject <goSeqRefInterface, SdkIsCreatingExternalWalletListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)stateChanged:(BOOL)p0;
@end

@interface SdkIsNetworkUserLoadingListener : NSObject <goSeqRefInterface, SdkIsNetworkUserLoadingListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)stateChanged:(BOOL)p0;
@end

@interface SdkIsNetworkUserUpdatingListener : NSObject <goSeqRefInterface, SdkIsNetworkUserUpdatingListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)stateChanged:(BOOL)p0;
@end

@interface SdkIsRemovingWalletListener : NSObject <goSeqRefInterface, SdkIsRemovingWalletListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)stateChanged:(BOOL)p0;
@end

@interface SdkIsSendingFeedbackListener : NSObject <goSeqRefInterface, SdkIsSendingFeedbackListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)stateChanged:(BOOL)p0;
@end

@interface SdkNetworkCheckCallback : NSObject <goSeqRefInterface, SdkNetworkCheckCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkNetworkCheckResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkNetworkClientsListener : NSObject <goSeqRefInterface, SdkNetworkClientsListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)networkClientsChanged:(SdkNetworkClientInfoList* _Nullable)networkClients;
@end

@interface SdkNetworkCreateCallback : NSObject <goSeqRefInterface, SdkNetworkCreateCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkNetworkCreateResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkNetworkDeleteCallback : NSObject <goSeqRefInterface, SdkNetworkDeleteCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkNetworkDeleteResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkNetworkSpaceUpdate : NSObject <goSeqRefInterface, SdkNetworkSpaceUpdate> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)update:(SdkNetworkSpaceValues* _Nullable)values;
@end

@interface SdkNetworkSpacesChangeListener : NSObject <goSeqRefInterface, SdkNetworkSpacesChangeListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)networkSpacesChanged;
@end

@interface SdkNetworkUserListener : NSObject <goSeqRefInterface, SdkNetworkUserListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)stateChanged;
@end

@interface SdkNetworkUserUpdateCallback : NSObject <goSeqRefInterface, SdkNetworkUserUpdateCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkNetworkUserUpdateResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkNetworkUserUpdateErrorListener : NSObject <goSeqRefInterface, SdkNetworkUserUpdateErrorListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)message:(NSString* _Nullable)p0;
@end

@interface SdkNetworkUserUpdateSuccessListener : NSObject <goSeqRefInterface, SdkNetworkUserUpdateSuccessListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)success;
@end

@interface SdkOfflineChangeListener : NSObject <goSeqRefInterface, SdkOfflineChangeListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)offlineChanged:(BOOL)offline vpnInterfaceWhileOffline:(BOOL)vpnInterfaceWhileOffline;
@end

@interface SdkParseByJwtCallback : NSObject <goSeqRefInterface, SdkParseByJwtCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkByJwt* _Nullable)result ok:(BOOL)ok;
@end

@interface SdkPaymentsListener : NSObject <goSeqRefInterface, SdkPaymentsListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)paymentsChanged;
@end

@interface SdkPayoutWalletListener : NSObject <goSeqRefInterface, SdkPayoutWalletListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)payoutWalletChanged:(SdkId* _Nullable)p0;
@end

@interface SdkProvideChangeListener : NSObject <goSeqRefInterface, SdkProvideChangeListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)provideChanged:(BOOL)provideEnabled;
@end

@interface SdkProvidePausedChangeListener : NSObject <goSeqRefInterface, SdkProvidePausedChangeListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)providePausedChanged:(BOOL)providePaused;
@end

/**
 * FIXME rename to ProvideSecretKeysChangeListener
 */
@interface SdkProvideSecretKeysListener : NSObject <goSeqRefInterface, SdkProvideSecretKeysListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)provideSecretKeysChanged:(SdkProvideSecretKeyList* _Nullable)provideSecretKeyList;
@end

@interface SdkProviderChangeListener : NSObject <goSeqRefInterface, SdkProviderChangeListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)providerChanged:(BOOL)providerEnabled;
@end

/**
 * receive a packet into the local raw socket
 */
@interface SdkReceivePacket : NSObject <goSeqRefInterface, SdkReceivePacket> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)receivePacket:(long)ipVersion ipProtocol:(long)ipProtocol packet:(NSData* _Nullable)packet;
@end

@interface SdkReferralCodeListener : NSObject <goSeqRefInterface, SdkReferralCodeListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)referralCodeUpdated:(NSString* _Nullable)p0;
@end

@interface SdkRemoteChangeListener : NSObject <goSeqRefInterface, SdkRemoteChangeListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)remoteChanged:(BOOL)remoteConnected;
@end

@interface SdkRemoveWalletCallback : NSObject <goSeqRefInterface, SdkRemoveWalletCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkRemoveWalletResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkRouteLocalChangeListener : NSObject <goSeqRefInterface, SdkRouteLocalChangeListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)routeLocalChanged:(BOOL)routeLocal;
@end

@interface SdkSelectedLocationListener : NSObject <goSeqRefInterface, SdkSelectedLocationListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)selectedLocationChanged:(SdkConnectLocation* _Nullable)location;
@end

@interface SdkSendFeedbackCallback : NSObject <goSeqRefInterface, SdkSendFeedbackCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkFeedbackSendResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkSetPayoutWalletCallback : NSObject <goSeqRefInterface, SdkSetPayoutWalletCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkSetPayoutWalletResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkSub : NSObject <goSeqRefInterface, SdkSub> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)close;
@end

@interface SdkSubscriptionBalanceCallback : NSObject <goSeqRefInterface, SdkSubscriptionBalanceCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkSubscriptionBalanceResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkSubscriptionCreatePaymentIdCallback : NSObject <goSeqRefInterface, SdkSubscriptionCreatePaymentIdCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkSubscriptionCreatePaymentIdResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkTunnelChangeListener : NSObject <goSeqRefInterface, SdkTunnelChangeListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)tunnelChanged:(BOOL)tunnelStarted;
@end

@interface SdkUnpaidByteCountListener : NSObject <goSeqRefInterface, SdkUnpaidByteCountListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)stateChanged:(int64_t)p0;
@end

@interface SdkUpgradeGuestCallback : NSObject <goSeqRefInterface, SdkUpgradeGuestCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkUpgradeGuestResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkUpgradeGuestExistingCallback : NSObject <goSeqRefInterface, SdkUpgradeGuestExistingCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkUpgradeGuestExistingResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkValidateAddressCallback : NSObject <goSeqRefInterface, SdkValidateAddressCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)sendResult:(BOOL)valid;
@end

@interface SdkValidateReferralCodeCallback : NSObject <goSeqRefInterface, SdkValidateReferralCodeCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkValidateReferralCodeResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkViewController : NSObject <goSeqRefInterface, SdkViewController> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)close;
- (void)start;
- (void)stop;
@end

@interface SdkViewControllerManager : NSObject <goSeqRefInterface, SdkViewControllerManager> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)close;
- (void)closeViewController:(id<SdkViewController> _Nullable)vc;
- (SdkAccountPreferencesViewController* _Nullable)openAccountPreferencesViewController;
- (SdkAccountViewController* _Nullable)openAccountViewController;
- (SdkConnectViewController* _Nullable)openConnectViewController;
- (SdkDevicesViewController* _Nullable)openDevicesViewController;
- (SdkFeedbackViewController* _Nullable)openFeedbackViewController;
- (SdkLocationsViewController* _Nullable)openLocationsViewController;
- (SdkNetworkUserViewController* _Nullable)openNetworkUserViewController;
- (SdkProvideViewController* _Nullable)openProvideViewController;
- (SdkReferralCodeViewController* _Nullable)openReferralCodeViewController;
- (SdkWalletViewController* _Nullable)openWalletViewController;
@end

@interface SdkWalletBalanceCallback : NSObject <goSeqRefInterface, SdkWalletBalanceCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkWalletBalanceResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkWalletCircleInitCallback : NSObject <goSeqRefInterface, SdkWalletCircleInitCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkWalletCircleInitResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkWalletCircleTransferOutCallback : NSObject <goSeqRefInterface, SdkWalletCircleTransferOutCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkWalletCircleTransferOutResult* _Nullable)result err:(NSError* _Nullable)err;
@end

@interface SdkWalletValidateAddressCallback : NSObject <goSeqRefInterface, SdkWalletValidateAddressCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)result:(SdkWalletValidateAddressResult* _Nullable)result err:(NSError* _Nullable)err;
@end

#endif
